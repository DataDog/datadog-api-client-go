// Code generated by MockGen. DO NOT EDIT.
// Source: ./configuration.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	datadog "github.com/DataDog/datadog-api-client-go/v2/api/datadog"
	gomock "github.com/golang/mock/gomock"
)

// MockDelegatedTokenProvider is a mock of DelegatedTokenProvider interface.
type MockDelegatedTokenProvider struct {
	ctrl     *gomock.Controller
	recorder *MockDelegatedTokenProviderMockRecorder
}

// MockDelegatedTokenProviderMockRecorder is the mock recorder for MockDelegatedTokenProvider.
type MockDelegatedTokenProviderMockRecorder struct {
	mock *MockDelegatedTokenProvider
}

// NewMockDelegatedTokenProvider creates a new mock instance.
func NewMockDelegatedTokenProvider(ctrl *gomock.Controller) *MockDelegatedTokenProvider {
	mock := &MockDelegatedTokenProvider{ctrl: ctrl}
	mock.recorder = &MockDelegatedTokenProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDelegatedTokenProvider) EXPECT() *MockDelegatedTokenProviderMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockDelegatedTokenProvider) Authenticate(ctx context.Context, config *datadog.DelegatedTokenConfig) (*datadog.DelegatedTokenCredentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", ctx, config)
	ret0, _ := ret[0].(*datadog.DelegatedTokenCredentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockDelegatedTokenProviderMockRecorder) Authenticate(ctx, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockDelegatedTokenProvider)(nil).Authenticate), ctx, config)
}
