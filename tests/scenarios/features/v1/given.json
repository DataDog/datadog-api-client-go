[
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"layout_type\": \"ordered\",\n  \"title\": \"{{ unique }} with Profile Metrics Query\",\n  \"widgets\": [\n    {\n      \"definition\": {\n        \"type\": \"timeseries\",\n        \"requests\": [\n          {\n            \"profile_metrics_query\": {\n              \"compute\": {\n                \"aggregation\": \"sum\",\n                \"facet\": \"@prof_core_cpu_cores\"\n              },\n              \"search\": {\n                \"query\": \"runtime:jvm\"\n              },\n              \"group_by\": [\n                {\n                  \"facet\": \"service\",\n                  \"limit\": 10,\n                  \"sort\": {\n                    \"aggregation\": \"sum\",\n                    \"order\": \"desc\",\n                    \"facet\": \"@prof_core_cpu_cores\"\n                  }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n"
      }
    ],
    "step": "there is a valid \"dashboard\" in the system",
    "key": "dashboard",
    "tag": "Dashboards",
    "operationId": "CreateDashboard"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"layout_type\": \"free\",\n  \"title\": \"{{ unique }} with Profile Metrics Query\",\n  \"widgets\": [\n    {\n      \"layout\": {\n        \"height\": 10,\n        \"width\": 10,\n        \"x\": 10,\n        \"y\": 10\n      },\n      \"definition\": {\n        \"type\": \"timeseries\",\n        \"requests\": [\n          {\n            \"profile_metrics_query\": {\n              \"compute\": {\n                \"aggregation\": \"sum\",\n                \"facet\": \"@prof_core_cpu_cores\"\n              },\n              \"search\": {\n                \"query\": \"runtime:jvm\"\n              },\n              \"group_by\": [\n                {\n                  \"facet\": \"service\",\n                  \"limit\": 10,\n                  \"sort\": {\n                    \"aggregation\": \"sum\",\n                    \"order\": \"desc\",\n                    \"facet\": \"@prof_core_cpu_cores\"\n                  }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n"
      }
    ],
    "step": "there is a valid \"screenboard_dashboard\" in the system",
    "key": "screenboard_dashboard",
    "tag": "Dashboards",
    "operationId": "CreateDashboard"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"name\": \"{{ unique }}\"\n}"
      }
    ],
    "step": "there is a valid \"dashboard_list\" in the system",
    "key": "dashboard_list",
    "tag": "Dashboard Lists",
    "operationId": "CreateDashboardList"
  },
  {
    "parameters": [
      {
        "name": "dashboard_id",
        "source": "dashboard.id"
      }
    ],
    "step": "the \"dashboard\" was deleted",
    "key": "deleted_dashboard",
    "tag": "Dashboards",
    "operationId": "DeleteDashboard"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"message\": \"{{ unique }}\",\n  \"start\": {{ timestamp(\"now\") }},\n  \"timezone\": \"Etc/UTC\",\n  \"scope\": [\"test:{{ unique_lower_alnum }}\"],\n  \"recurrence\": {\n    \"type\": \"weeks\",\n    \"period\": 1,\n    \"week_days\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"],\n    \"until_date\": {{ timestamp(\"now + 21d\")}}\n  }\n}"
      }
    ],
    "step": "there is a valid \"downtime\" in the system",
    "key": "downtime",
    "tag": "Downtimes",
    "operationId": "CreateDowntime"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"name\": \"{{ unique_upper_alnum }}\",\n  \"value\": \"variable-value\",\n  \"is_secret\": false\n}"
      }
    ],
    "step": "there is a valid \"webhook_custom_variable\" in the system",
    "key": "webhook_custom_variable",
    "tag": "Webhooks Integration",
    "operationId": "CreateWebhooksIntegrationCustomVariable"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"name\": \"{{ unique }}\",\n  \"url\": \"http://example.com/webhook\"\n}"
      }
    ],
    "step": "there is a valid \"webhook\" in the system",
    "key": "webhook",
    "tag": "Webhooks Integration",
    "operationId": "CreateWebhooksIntegration"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"name\": \"{{ unique }}\",\n  \"type\": \"log alert\",\n  \"query\": \"logs(\\\"service:foo AND type:error\\\").index(\\\"main\\\").rollup(\\\"count\\\").by(\\\"source\\\").last(\\\"5m\\\") > 2\",\n  \"message\": \"some message Notify: @hipchat-channel\",\n  \"tags\": [\"test:{{ unique_lower_alnum }}\", \"env:ci\"],\n  \"priority\": 3,\n  \"options\": {\n    \"enable_logs_sample\": true,\n    \"escalation_message\": \"the situation has escalated\",\n    \"evaluation_delay\": 700,\n    \"groupby_simple_monitor\": true,\n    \"include_tags\": true,\n    \"locked\": false,\n    \"new_host_delay\": 600,\n    \"no_data_timeframe\": null,\n    \"notify_audit\": false,\n    \"notify_no_data\": false,\n    \"renotify_interval\": 60,\n    \"require_full_window\": true,\n    \"timeout_h\": 24,\n    \"thresholds\": { \"critical\": 2, \"warning\": 1 }\n  }\n}\n"
      }
    ],
    "step": "there is a valid \"monitor\" in the system",
    "key": "monitor",
    "tag": "Monitors",
    "operationId": "CreateMonitor"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"data\": {\n    \"type\": \"notebooks\",\n    \"attributes\": {\n      \"name\": \"{{ unique }}\",\n      \"time\": { \"live_span\": \"1h\" },\n      \"cells\": [\n        {\n          \"attributes\": {\n            \"definition\": {\n              \"text\": \"# {{ unique }} notebook text\",\n              \"type\": \"markdown\"\n            }\n          },\n          \"type\": \"notebook_cells\"\n        }\n      ]\n    }\n  }\n}\n"
      }
    ],
    "step": "there is a valid \"notebook\" in the system",
    "key": "notebook",
    "tag": "Notebooks",
    "operationId": "CreateNotebook"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"series\": [\n    {\n      \"metric\": \"{{ unique_alnum }}\",\n      \"type\": \"gauge\",\n      \"points\": [\n        [\n          {{ timestamp(\"now\") }},\n          1.1\n        ]\n      ],\n      \"tags\": [\n        \"test:ExampleSubmitmetricsreturnsPayloadacceptedresponse\"\n      ]\n    }\n  ]\n}\n"
      }
    ],
    "step": "there is a valid \"metric\" in the system",
    "key": "metric",
    "tag": "Metrics",
    "operationId": "SubmitMetrics"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"type\": \"metric\",\n  \"name\": \"{{ unique }}\",\n  \"thresholds\": [{\n    \"timeframe\": \"7d\",\n    \"target\": 95.0,\n    \"warning\": 98.0\n  }],\n  \"query\": {\n    \"numerator\": \"sum:httpservice.hits{code:2xx}.as_count()\",\n    \"denominator\": \"sum:httpservice.hits{!code:3xx}.as_count()\"\n  }\n}"
      }
    ],
    "step": "there is a valid \"slo\" in the system",
    "key": "slo",
    "tag": "Service Level Objectives",
    "operationId": "CreateSLO"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"data\": {\n    \"attributes\": {\n      \"slo_id\": \"{{ slo.data[0].id }}\",\n      \"start\": {{ timestamp(\"now\") }},\n      \"end\": {{ timestamp(\"now + 1h\") }},\n      \"category\": \"Other\",\n      \"timezone\": \"UTC\",\n      \"description\": \"Test Correction\"\n     },\n     \"type\": \"correction\"\n  }\n}"
      }
    ],
    "step": "there is a valid \"correction\" for \"slo\"",
    "key": "correction",
    "tag": "Service Level Objective Corrections",
    "operationId": "CreateSLOCorrection"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"is\",\n        \"property\": \"{{ '{{ PROPERTY }}' }}\",\n        \"target\": \"text/html\",\n        \"type\": \"header\"\n      },\n      { \"operator\": \"lessThan\", \"target\": 2000, \"type\": \"responseTime\" },\n      {\n        \"operator\": \"validatesJSONPath\",\n        \"target\": {\n          \"jsonPath\": \"topKey\",\n          \"operator\": \"isNot\",\n          \"targetValue\": \"0\"\n        },\n        \"type\": \"body\"\n      }\n    ],\n    \"configVariables\": [\n      {\n        \"example\": \"content-type\",\n        \"name\": \"PROPERTY\",\n        \"pattern\": \"content-type\",\n        \"type\": \"text\"\n      }\n    ],\n    \"request\": {\n      \"certificate\": {\n        \"cert\": {\n          \"content\": \"cert-content\",\n          \"filename\": \"cert-filename\",\n          \"updatedAt\": \"2020-10-16T09:23:24.857Z\"\n        },\n        \"key\": {\n          \"content\": \"key-content\",\n          \"filename\": \"key-filename\",\n          \"updatedAt\": \"2020-10-16T09:23:24.857Z\"\n        }\n      },\n      \"headers\": { \"unique\": \"{{ unique_lower_alnum }}\" },\n      \"method\": \"GET\",\n      \"timeout\": 10,\n      \"url\": \"https://datadoghq.com\",\n      \"proxy\": {\n        \"url\": \"https://datadoghq.com\",\n        \"headers\": {}\n      }\n    }\n  },\n  \"locations\": [\"aws:us-east-2\"],\n  \"message\": \"BDD test payload: synthetics_api_http_test_payload.json\",\n  \"name\": \"{{ unique }}\",\n  \"options\": {\n    \"accept_self_signed\": false,\n    \"allow_insecure\": true,\n    \"follow_redirects\": true,\n    \"min_failure_duration\": 10,\n    \"min_location_failed\": 1,\n    \"monitor_name\": \"{{ unique }}\",\n    \"monitor_priority\": 5,\n    \"retry\": { \"count\": 3, \"interval\": 10 },\n    \"tick_every\": 60\n  },\n  \"subtype\": \"http\",\n  \"tags\": [\"testing:api\"],\n  \"type\": \"api\"\n}\n"
      }
    ],
    "step": "there is a valid \"synthetics_api_test\" in the system",
    "key": "synthetics_api_test",
    "tag": "Synthetics",
    "operationId": "CreateSyntheticsAPITest"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\n  \"message\": \"Testing wrong DNS error\",\n  \"name\": \"{{ unique }}\",\n  \"tags\": [],\n  \"type\": \"api\",\n  \"subtype\": \"http\",\n  \"locations\": [\"aws:eu-west-3\"],\n  \"config\": {\n    \"assertions\": [\n      {\n        \"operator\": \"lessThan\",\n        \"type\": \"responseTime\",\n        \"target\": 1000\n      }\n    ],\n    \"request\": {\n      \"method\": \"GET\",\n      \"url\": \"https://app.datadfoghq.com\"\n    }\n  },\n  \"options\": {\n    \"tick_every\": 86400,\n    \"monitor_options\": {\n      \"renotify_interval\": 0\n    },\n    \"min_failure_duration\": 0,\n    \"min_location_failed\": 1\n  }\n}\n"
      }
    ],
    "step": "there is a \"synthetics_api_test_with_wrong_dns\" in the system",
    "key": "synthetics_api_test_with_wrong_dns",
    "tag": "Synthetics",
    "operationId": "CreateSyntheticsAPITest"
  },
  {
    "parameters": [
      {
        "name": "body",
        "value": "{\"tests\": [{\"public_id\": \"{{ synthetics_api_test_with_wrong_dns.public_id }}\"}]}"
      }
    ],
    "step": "the \"synthetics_api_test_with_wrong_dns\" is triggered",
    "key": "synthetics_api_test_with_wrong_dns_result",
    "tag": "Synthetics",
    "operationId": "TriggerTests"
  },
  {
    "parameters": [
      {
        "name": "start_month",
        "value": "\"{{ timeISO('now - 3d') }}\""
      },
      {
        "name": "fields",
        "value": "\"infra_host_usage\""
      }
    ],
    "step": "there is a valid \"monthly_usage_attribution\" response",
    "key": "monthly_usage_attribution",
    "tag": "Usage Metering",
    "operationId": "GetMonthlyUsageAttribution"
  }
]
