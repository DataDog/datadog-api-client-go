/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
	"errors"
)

type DeleteAwsByIdentifier struct {
	// Delete the AWS account that matches this account_id.
	AccountId *string `json:"account_id,omitempty"`

	// Delete the AWS account that matches this role_name.
	RoleName *string `json:"role_name,omitempty"`
}

// GetAccountId returns the AccountId field if non-nil, zero value otherwise.
func (o *DeleteAwsByIdentifier) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAwsByIdentifier) GetAccountIdOk() (string, bool) {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret, false
	}
	return *o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DeleteAwsByIdentifier) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DeleteAwsByIdentifier) SetAccountId(v string) {
	o.AccountId = &v
}

// GetRoleName returns the RoleName field if non-nil, zero value otherwise.
func (o *DeleteAwsByIdentifier) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAwsByIdentifier) GetRoleNameOk() (string, bool) {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret, false
	}
	return *o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *DeleteAwsByIdentifier) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *DeleteAwsByIdentifier) SetRoleName(v string) {
	o.RoleName = &v
}

func (o DeleteAwsByIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId == nil {
		return nil, errors.New("AccountId is required and not nullable, but was not set on DeleteAwsByIdentifier")
	}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.RoleName == nil {
		return nil, errors.New("RoleName is required and not nullable, but was not set on DeleteAwsByIdentifier")
	}
	if o.RoleName != nil {
		toSerialize["role_name"] = o.RoleName
	}
	return json.Marshal(toSerialize)
}
