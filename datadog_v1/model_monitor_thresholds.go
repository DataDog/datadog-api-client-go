/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
)

// MonitorThresholds struct for MonitorThresholds
type MonitorThresholds struct {
	Critical *float32 `json:"critical,omitempty"`

	CriticalRecovery *float32 `json:"critical_recovery,omitempty"`

	Ok *float32 `json:"ok,omitempty"`

	Warning *float32 `json:"warning,omitempty"`

	WarningRecovery *float32 `json:"warning_recovery,omitempty"`
}

// GetCritical returns the Critical field if non-nil, zero value otherwise.
func (o *MonitorThresholds) GetCritical() float32 {
	if o == nil || o.Critical == nil {
		var ret float32
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorThresholds) GetCriticalOk() (float32, bool) {
	if o == nil || o.Critical == nil {
		var ret float32
		return ret, false
	}
	return *o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *MonitorThresholds) HasCritical() bool {
	if o != nil && o.Critical != nil {
		return true
	}

	return false
}

// SetCritical gets a reference to the given float32 and assigns it to the Critical field.
func (o *MonitorThresholds) SetCritical(v float32) {
	o.Critical = &v
}

// GetCriticalRecovery returns the CriticalRecovery field if non-nil, zero value otherwise.
func (o *MonitorThresholds) GetCriticalRecovery() float32 {
	if o == nil || o.CriticalRecovery == nil {
		var ret float32
		return ret
	}
	return *o.CriticalRecovery
}

// GetCriticalRecoveryOk returns a tuple with the CriticalRecovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorThresholds) GetCriticalRecoveryOk() (float32, bool) {
	if o == nil || o.CriticalRecovery == nil {
		var ret float32
		return ret, false
	}
	return *o.CriticalRecovery, true
}

// HasCriticalRecovery returns a boolean if a field has been set.
func (o *MonitorThresholds) HasCriticalRecovery() bool {
	if o != nil && o.CriticalRecovery != nil {
		return true
	}

	return false
}

// SetCriticalRecovery gets a reference to the given float32 and assigns it to the CriticalRecovery field.
func (o *MonitorThresholds) SetCriticalRecovery(v float32) {
	o.CriticalRecovery = &v
}

// GetOk returns the Ok field if non-nil, zero value otherwise.
func (o *MonitorThresholds) GetOk() float32 {
	if o == nil || o.Ok == nil {
		var ret float32
		return ret
	}
	return *o.Ok
}

// GetOkOk returns a tuple with the Ok field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorThresholds) GetOkOk() (float32, bool) {
	if o == nil || o.Ok == nil {
		var ret float32
		return ret, false
	}
	return *o.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (o *MonitorThresholds) HasOk() bool {
	if o != nil && o.Ok != nil {
		return true
	}

	return false
}

// SetOk gets a reference to the given float32 and assigns it to the Ok field.
func (o *MonitorThresholds) SetOk(v float32) {
	o.Ok = &v
}

// GetWarning returns the Warning field if non-nil, zero value otherwise.
func (o *MonitorThresholds) GetWarning() float32 {
	if o == nil || o.Warning == nil {
		var ret float32
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorThresholds) GetWarningOk() (float32, bool) {
	if o == nil || o.Warning == nil {
		var ret float32
		return ret, false
	}
	return *o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *MonitorThresholds) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given float32 and assigns it to the Warning field.
func (o *MonitorThresholds) SetWarning(v float32) {
	o.Warning = &v
}

// GetWarningRecovery returns the WarningRecovery field if non-nil, zero value otherwise.
func (o *MonitorThresholds) GetWarningRecovery() float32 {
	if o == nil || o.WarningRecovery == nil {
		var ret float32
		return ret
	}
	return *o.WarningRecovery
}

// GetWarningRecoveryOk returns a tuple with the WarningRecovery field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorThresholds) GetWarningRecoveryOk() (float32, bool) {
	if o == nil || o.WarningRecovery == nil {
		var ret float32
		return ret, false
	}
	return *o.WarningRecovery, true
}

// HasWarningRecovery returns a boolean if a field has been set.
func (o *MonitorThresholds) HasWarningRecovery() bool {
	if o != nil && o.WarningRecovery != nil {
		return true
	}

	return false
}

// SetWarningRecovery gets a reference to the given float32 and assigns it to the WarningRecovery field.
func (o *MonitorThresholds) SetWarningRecovery(v float32) {
	o.WarningRecovery = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o MonitorThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Critical != nil {
		toSerialize["critical"] = o.Critical
	}
	if o.CriticalRecovery != nil {
		toSerialize["critical_recovery"] = o.CriticalRecovery
	}
	if o.Ok != nil {
		toSerialize["ok"] = o.Ok
	}
	if o.Warning != nil {
		toSerialize["warning"] = o.Warning
	}
	if o.WarningRecovery != nil {
		toSerialize["warning_recovery"] = o.WarningRecovery
	}
	return json.Marshal(toSerialize)
}
