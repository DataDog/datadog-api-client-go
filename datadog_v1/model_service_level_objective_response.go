/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
	"errors"
)

// ServiceLevelObjectiveResponse struct for ServiceLevelObjectiveResponse
type ServiceLevelObjectiveResponse struct {
	// An array of service level objective objects.
	Data *[]ServiceLevelObjective `json:"data,omitempty"`

	// An array of error messages. Each endpoint documents how/whether this field is used.
	Errors *[]string `json:"errors,omitempty"`
}

// GetData returns the Data field if non-nil, zero value otherwise.
func (o *ServiceLevelObjectiveResponse) GetData() []ServiceLevelObjective {
	if o == nil || o.Data == nil {
		var ret []ServiceLevelObjective
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLevelObjectiveResponse) GetDataOk() ([]ServiceLevelObjective, bool) {
	if o == nil || o.Data == nil {
		var ret []ServiceLevelObjective
		return ret, false
	}
	return *o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ServiceLevelObjectiveResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []ServiceLevelObjective and assigns it to the Data field.
func (o *ServiceLevelObjectiveResponse) SetData(v []ServiceLevelObjective) {
	o.Data = &v
}

// GetErrors returns the Errors field if non-nil, zero value otherwise.
func (o *ServiceLevelObjectiveResponse) GetErrors() []string {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLevelObjectiveResponse) GetErrorsOk() ([]string, bool) {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret, false
	}
	return *o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ServiceLevelObjectiveResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ServiceLevelObjectiveResponse) SetErrors(v []string) {
	o.Errors = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o ServiceLevelObjectiveResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data == nil {
		return nil, errors.New("Data is required and not nullable, but was not set on ServiceLevelObjectiveResponse")
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}
