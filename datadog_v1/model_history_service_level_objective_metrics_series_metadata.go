/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
)

// HistoryServiceLevelObjectiveMetricsSeriesMetadata Query metadata.
type HistoryServiceLevelObjectiveMetricsSeriesMetadata struct {
	// Query aggregator function.
	Aggr *string `json:"aggr,omitempty"`

	// Query expression.
	Expression *string `json:"expression,omitempty"`

	// Query metric used.
	Metric *string `json:"metric,omitempty"`

	// Query index from original combined query.
	QueryIndex *int32 `json:"query_index,omitempty"`

	// Query scope.
	Scope *string `json:"scope,omitempty"`

	// Query units (if available).
	Unit *string `json:"unit,omitempty"`
}

// GetAggr returns the Aggr field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetAggr() string {
	if o == nil || o.Aggr == nil {
		var ret string
		return ret
	}
	return *o.Aggr
}

// GetAggrOk returns a tuple with the Aggr field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetAggrOk() (string, bool) {
	if o == nil || o.Aggr == nil {
		var ret string
		return ret, false
	}
	return *o.Aggr, true
}

// HasAggr returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasAggr() bool {
	if o != nil && o.Aggr != nil {
		return true
	}

	return false
}

// SetAggr gets a reference to the given string and assigns it to the Aggr field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetAggr(v string) {
	o.Aggr = &v
}

// GetExpression returns the Expression field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetExpression() string {
	if o == nil || o.Expression == nil {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetExpressionOk() (string, bool) {
	if o == nil || o.Expression == nil {
		var ret string
		return ret, false
	}
	return *o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetExpression(v string) {
	o.Expression = &v
}

// GetMetric returns the Metric field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetMetricOk() (string, bool) {
	if o == nil || o.Metric == nil {
		var ret string
		return ret, false
	}
	return *o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetMetric(v string) {
	o.Metric = &v
}

// GetQueryIndex returns the QueryIndex field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetQueryIndex() int32 {
	if o == nil || o.QueryIndex == nil {
		var ret int32
		return ret
	}
	return *o.QueryIndex
}

// GetQueryIndexOk returns a tuple with the QueryIndex field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetQueryIndexOk() (int32, bool) {
	if o == nil || o.QueryIndex == nil {
		var ret int32
		return ret, false
	}
	return *o.QueryIndex, true
}

// HasQueryIndex returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasQueryIndex() bool {
	if o != nil && o.QueryIndex != nil {
		return true
	}

	return false
}

// SetQueryIndex gets a reference to the given int32 and assigns it to the QueryIndex field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetQueryIndex(v int32) {
	o.QueryIndex = &v
}

// GetScope returns the Scope field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetScopeOk() (string, bool) {
	if o == nil || o.Scope == nil {
		var ret string
		return ret, false
	}
	return *o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetScope(v string) {
	o.Scope = &v
}

// GetUnit returns the Unit field if non-nil, zero value otherwise.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) GetUnitOk() (string, bool) {
	if o == nil || o.Unit == nil {
		var ret string
		return ret, false
	}
	return *o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *HistoryServiceLevelObjectiveMetricsSeriesMetadata) SetUnit(v string) {
	o.Unit = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o HistoryServiceLevelObjectiveMetricsSeriesMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aggr != nil {
		toSerialize["aggr"] = o.Aggr
	}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	if o.QueryIndex != nil {
		toSerialize["query_index"] = o.QueryIndex
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}
