/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
	"errors"
)

// CancelDowntimesByScopeRequest struct for CancelDowntimesByScopeRequest
type CancelDowntimesByScopeRequest struct {
	Scope *string `json:"scope,omitempty"`
}

// GetScope returns the Scope field if non-nil, zero value otherwise.
func (o *CancelDowntimesByScopeRequest) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CancelDowntimesByScopeRequest) GetScopeOk() (string, bool) {
	if o == nil || o.Scope == nil {
		var ret string
		return ret, false
	}
	return *o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *CancelDowntimesByScopeRequest) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *CancelDowntimesByScopeRequest) SetScope(v string) {
	o.Scope = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o CancelDowntimesByScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Scope == nil {
		return nil, errors.New("Scope is required and not nullable, but was not set on CancelDowntimesByScopeRequest")
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}
