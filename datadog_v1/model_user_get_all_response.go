/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
)

// UserGetAllResponse struct for UserGetAllResponse
type UserGetAllResponse struct {
	Users *[]User `json:"users,omitempty"`
}

// GetUsers returns the Users field if non-nil, zero value otherwise.
func (o *UserGetAllResponse) GetUsers() []User {
	if o == nil || o.Users == nil {
		var ret []User
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserGetAllResponse) GetUsersOk() ([]User, bool) {
	if o == nil || o.Users == nil {
		var ret []User
		return ret, false
	}
	return *o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *UserGetAllResponse) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []User and assigns it to the Users field.
func (o *UserGetAllResponse) SetUsers(v []User) {
	o.Users = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o UserGetAllResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}
