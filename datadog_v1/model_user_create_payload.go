/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"encoding/json"
	"errors"
)

// UserCreatePayload struct for UserCreatePayload
type UserCreatePayload struct {
	AccessRole *string `json:"access_role,omitempty"`

	Email *string `json:"email,omitempty"`

	Handle *string `json:"handle,omitempty"`

	Name *string `json:"name,omitempty"`
}

// GetAccessRole returns the AccessRole field if non-nil, zero value otherwise.
func (o *UserCreatePayload) GetAccessRole() string {
	if o == nil || o.AccessRole == nil {
		var ret string
		return ret
	}
	return *o.AccessRole
}

// GetAccessRoleOk returns a tuple with the AccessRole field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatePayload) GetAccessRoleOk() (string, bool) {
	if o == nil || o.AccessRole == nil {
		var ret string
		return ret, false
	}
	return *o.AccessRole, true
}

// HasAccessRole returns a boolean if a field has been set.
func (o *UserCreatePayload) HasAccessRole() bool {
	if o != nil && o.AccessRole != nil {
		return true
	}

	return false
}

// SetAccessRole gets a reference to the given string and assigns it to the AccessRole field.
func (o *UserCreatePayload) SetAccessRole(v string) {
	o.AccessRole = &v
}

// GetEmail returns the Email field if non-nil, zero value otherwise.
func (o *UserCreatePayload) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatePayload) GetEmailOk() (string, bool) {
	if o == nil || o.Email == nil {
		var ret string
		return ret, false
	}
	return *o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCreatePayload) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserCreatePayload) SetEmail(v string) {
	o.Email = &v
}

// GetHandle returns the Handle field if non-nil, zero value otherwise.
func (o *UserCreatePayload) GetHandle() string {
	if o == nil || o.Handle == nil {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatePayload) GetHandleOk() (string, bool) {
	if o == nil || o.Handle == nil {
		var ret string
		return ret, false
	}
	return *o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *UserCreatePayload) HasHandle() bool {
	if o != nil && o.Handle != nil {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *UserCreatePayload) SetHandle(v string) {
	o.Handle = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *UserCreatePayload) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatePayload) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserCreatePayload) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserCreatePayload) SetName(v string) {
	o.Name = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o UserCreatePayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessRole != nil {
		toSerialize["access_role"] = o.AccessRole
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Handle == nil {
		return nil, errors.New("Handle is required and not nullable, but was not set on UserCreatePayload")
	}
	if o.Handle != nil {
		toSerialize["handle"] = o.Handle
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}
