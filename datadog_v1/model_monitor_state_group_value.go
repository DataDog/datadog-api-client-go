/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog_v1

import (
	"bytes"
	"encoding/json"
)

// MonitorStateGroupValue struct for MonitorStateGroupValue
type MonitorStateGroupValue struct {
	FromTs *int64   `json:"from_ts,omitempty"`
	Left   *float32 `json:"left,omitempty"`
	Right  *float32 `json:"right,omitempty"`
	ToTs   *int64   `json:"to_ts,omitempty"`
	Value  *float32 `json:"value,omitempty"`
}

// GetFromTs returns the FromTs field value if set, zero value otherwise.
func (o *MonitorStateGroupValue) GetFromTs() int64 {
	if o == nil || o.FromTs == nil {
		var ret int64
		return ret
	}
	return *o.FromTs
}

// GetFromTsOk returns a tuple with the FromTs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStateGroupValue) GetFromTsOk() (int64, bool) {
	if o == nil || o.FromTs == nil {
		var ret int64
		return ret, false
	}
	return *o.FromTs, true
}

// HasFromTs returns a boolean if a field has been set.
func (o *MonitorStateGroupValue) HasFromTs() bool {
	if o != nil && o.FromTs != nil {
		return true
	}

	return false
}

// SetFromTs gets a reference to the given int64 and assigns it to the FromTs field.
func (o *MonitorStateGroupValue) SetFromTs(v int64) {
	o.FromTs = &v
}

// GetLeft returns the Left field value if set, zero value otherwise.
func (o *MonitorStateGroupValue) GetLeft() float32 {
	if o == nil || o.Left == nil {
		var ret float32
		return ret
	}
	return *o.Left
}

// GetLeftOk returns a tuple with the Left field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStateGroupValue) GetLeftOk() (float32, bool) {
	if o == nil || o.Left == nil {
		var ret float32
		return ret, false
	}
	return *o.Left, true
}

// HasLeft returns a boolean if a field has been set.
func (o *MonitorStateGroupValue) HasLeft() bool {
	if o != nil && o.Left != nil {
		return true
	}

	return false
}

// SetLeft gets a reference to the given float32 and assigns it to the Left field.
func (o *MonitorStateGroupValue) SetLeft(v float32) {
	o.Left = &v
}

// GetRight returns the Right field value if set, zero value otherwise.
func (o *MonitorStateGroupValue) GetRight() float32 {
	if o == nil || o.Right == nil {
		var ret float32
		return ret
	}
	return *o.Right
}

// GetRightOk returns a tuple with the Right field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStateGroupValue) GetRightOk() (float32, bool) {
	if o == nil || o.Right == nil {
		var ret float32
		return ret, false
	}
	return *o.Right, true
}

// HasRight returns a boolean if a field has been set.
func (o *MonitorStateGroupValue) HasRight() bool {
	if o != nil && o.Right != nil {
		return true
	}

	return false
}

// SetRight gets a reference to the given float32 and assigns it to the Right field.
func (o *MonitorStateGroupValue) SetRight(v float32) {
	o.Right = &v
}

// GetToTs returns the ToTs field value if set, zero value otherwise.
func (o *MonitorStateGroupValue) GetToTs() int64 {
	if o == nil || o.ToTs == nil {
		var ret int64
		return ret
	}
	return *o.ToTs
}

// GetToTsOk returns a tuple with the ToTs field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStateGroupValue) GetToTsOk() (int64, bool) {
	if o == nil || o.ToTs == nil {
		var ret int64
		return ret, false
	}
	return *o.ToTs, true
}

// HasToTs returns a boolean if a field has been set.
func (o *MonitorStateGroupValue) HasToTs() bool {
	if o != nil && o.ToTs != nil {
		return true
	}

	return false
}

// SetToTs gets a reference to the given int64 and assigns it to the ToTs field.
func (o *MonitorStateGroupValue) SetToTs(v int64) {
	o.ToTs = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MonitorStateGroupValue) GetValue() float32 {
	if o == nil || o.Value == nil {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MonitorStateGroupValue) GetValueOk() (float32, bool) {
	if o == nil || o.Value == nil {
		var ret float32
		return ret, false
	}
	return *o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MonitorStateGroupValue) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *MonitorStateGroupValue) SetValue(v float32) {
	o.Value = &v
}

type NullableMonitorStateGroupValue struct {
	Value        MonitorStateGroupValue
	ExplicitNull bool
}

func (v NullableMonitorStateGroupValue) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableMonitorStateGroupValue) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
