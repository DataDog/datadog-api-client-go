name: Run Tests

permissions:
  contents: read

env:
  GIT_AUTHOR_EMAIL: "packages@datadoghq.com"
  GIT_AUTHOR_NAME: "ci.datadog-api-spec"

on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 1 * * *"

concurrency:
  group: unit-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    if: >
      (github.event.pull_request.draft == false &&
       !contains(github.event.pull_request.labels.*.name, 'ci/skip') &&
       !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/')) ||
      github.event_name == 'schedule'
    steps:
      - name: Get GitHub App token
        id: get_token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        with:
          app-id: ${{ secrets.PIPELINE_GITHUB_APP_ID }}
          private-key: ${{ secrets.PIPELINE_GITHUB_APP_PRIVATE_KEY }}
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ steps.get_token.outputs.token }}
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      - name: Install pre-commit
        run: python -m pip install pre-commit
      - name: set PY
        run: echo "PY=$(python -c 'import platform;print(platform.python_version())')" >> $GITHUB_ENV
      - uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3.4.3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install Go
        uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639 # v4.2.1
        with:
          go-version: 1.22.x
      - id: pre_commit
        name: Run pre-commit
        if: github.event.action != 'closed' && github.event.pull_request.merged != true
        run: |
          pre-commit run --from-ref "${FROM_REF}" --to-ref "${TO_REF}" --show-diff-on-failure --color=always
        env:
          FROM_REF: ${{ github.event.pull_request.base.sha }}
          TO_REF: ${{ github.event.pull_request.head.sha }}
      - name: Commit changes
        if: ${{ failure() }}
        run: |-
          git add -A
          git config user.name "${GIT_AUTHOR_NAME}"
          git config user.email "${GIT_AUTHOR_EMAIL}"
          git commit -m "pre-commit fixes"
          git push origin "HEAD:${HEAD_REF}"
          exit 1
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
      - id: pre_commit_schedule
        name: Run pre-commit in schedule
        if: github.event_name == 'schedule'
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

  test:
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x]
        go-build-tags: ["--tags=goccy_gojson", ""]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    if: (github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'ci/skip') && !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/')) || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Install Go
        uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639 # v4.2.1
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: tests/go.sum
      - name: Test
        run: ./run-tests.sh
        env:
          TESTARGS: ${{ matrix.go-build-tags }}

  examples:
    runs-on: ubuntu-latest
    if: (github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'ci/skip') && !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/')) || github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Install Go
        uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639 # v4.2.1
        with:
          go-version: 1.22.x
          cache: true
          cache-dependency-path: tests/go.sum
      - name: Check examples
        run: ./check-examples.sh
        shell: bash

  report:
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
    needs:
      - test
      - examples
    steps:
      - name: Get GitHub App token
        if: github.event_name == 'pull_request'
        id: get_token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        with:
          app-id: ${{ secrets.PIPELINE_GITHUB_APP_ID }}
          private-key: ${{ secrets.PIPELINE_GITHUB_APP_PRIVATE_KEY }}
          repositories: datadog-api-spec
      - name: Post status check
        uses: DataDog/github-actions/post-status-check@65b4875f33ad773d7ba4b005a2cb5f35020295f3 # v2.3.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: ${{ (needs.test.result == 'cancelled' || needs.examples.result == 'cancelled') && 'pending' || needs.test.result == 'success' && needs.examples.result == 'success' && 'success' || 'failure' }}
          context: master/unit
