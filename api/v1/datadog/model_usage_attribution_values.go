/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// UsageAttributionValues Fields in Usage Summary by tag(s).
type UsageAttributionValues struct {
	// The percentage of synthetic API test usage by tag(s).
	ApiPercentage *float64 `json:"api_percentage,omitempty"`
	// The synthetic API test usage by tag(s).
	ApiUsage *float64 `json:"api_usage,omitempty"`
	// The percentage of APM host usage by tag(s).
	ApmHostPercentage *float64 `json:"apm_host_percentage,omitempty"`
	// The APM host usage by tag(s).
	ApmHostUsage *float64 `json:"apm_host_usage,omitempty"`
	// The percentage of synthetic browser test usage by tag(s).
	BrowserPercentage *float64 `json:"browser_percentage,omitempty"`
	// The synthetic browser test usage by tag(s).
	BrowserUsage *float64 `json:"browser_usage,omitempty"`
	// The percentage of container usage by tag(s).
	ContainerPercentage *float64 `json:"container_percentage,omitempty"`
	// The container usage by tag(s).
	ContainerUsage *float64 `json:"container_usage,omitempty"`
	// The percentage of custom metrics usage by tag(s).
	CustomTimeseriesPercentage *float64 `json:"custom_timeseries_percentage,omitempty"`
	// The custom metrics usage by tag(s).
	CustomTimeseriesUsage *float64 `json:"custom_timeseries_usage,omitempty"`
	// The percentage of Cloud Workload Security container usage by tag(s)
	CwsContainerPercentage *float64 `json:"cws_container_percentage,omitempty"`
	// The Cloud Workload Security container usage by tag(s)
	CwsContainerUsage *float64 `json:"cws_container_usage,omitempty"`
	// The percentage of Cloud Workload Security host usage by tag(s)
	CwsHostPercentage *float64 `json:"cws_host_percentage,omitempty"`
	// The Cloud Workload Security host usage by tag(s)
	CwsHostUsage *float64 `json:"cws_host_usage,omitempty"`
	// The percentage of infrastructure host usage by tag(s).
	InfraHostPercentage *float64 `json:"infra_host_percentage,omitempty"`
	// The infrastructure host usage by tag(s).
	InfraHostUsage *float64 `json:"infra_host_usage,omitempty"`
	// The percentage of Lambda function usage by tag(s).
	LambdaFunctionsPercentage *float64 `json:"lambda_functions_percentage,omitempty"`
	// The Lambda function usage by tag(s).
	LambdaFunctionsUsage *float64 `json:"lambda_functions_usage,omitempty"`
	// The percentage of Lambda invocation usage by tag(s).
	LambdaInvocationsPercentage *float64 `json:"lambda_invocations_percentage,omitempty"`
	// The Lambda invocation usage by tag(s).
	LambdaInvocationsUsage *float64 `json:"lambda_invocations_usage,omitempty"`
	// The percentage of Lambda function usage by tag(s).  **Note** this field is deprecated. Use lambda_functions_percentage instead.
	LambdaPercentage *float64 `json:"lambda_percentage,omitempty"`
	// The Lambda function usage by tag(s).  **Note** this field is deprecated. Use lambda_functions_usage instead.
	LambdaUsage *float64 `json:"lambda_usage,omitempty"`
	// The percentage of network host usage by tag(s).
	NpmHostPercentage *float64 `json:"npm_host_percentage,omitempty"`
	// The network host usage by tag(s).
	NpmHostUsage *float64 `json:"npm_host_usage,omitempty"`
	// The percentage of profiled containers usage by tag(s).
	ProfiledContainersPercentage *float64 `json:"profiled_containers_percentage,omitempty"`
	// The profiled container usage by tag(s).
	ProfiledContainersUsage *float64 `json:"profiled_containers_usage,omitempty"`
	// The percentage of profiled hosts usage by tag(s).
	ProfiledHostsPercentage *float64 `json:"profiled_hosts_percentage,omitempty"`
	// The profiled host usage by tag(s).
	ProfiledHostsUsage *float64 `json:"profiled_hosts_usage,omitempty"`
	// The percentage of network device usage by tag(s).
	SnmpPercentage *float64 `json:"snmp_percentage,omitempty"`
	// The network device usage by tag(s).
	SnmpUsage *float64 `json:"snmp_usage,omitempty"`
}

// NewUsageAttributionValues instantiates a new UsageAttributionValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageAttributionValues() *UsageAttributionValues {
	this := UsageAttributionValues{}
	return &this
}

// NewUsageAttributionValuesWithDefaults instantiates a new UsageAttributionValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageAttributionValuesWithDefaults() *UsageAttributionValues {
	this := UsageAttributionValues{}
	return &this
}

// GetApiPercentage returns the ApiPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetApiPercentage() float64 {
	if o == nil || o.ApiPercentage == nil {
		var ret float64
		return ret
	}
	return *o.ApiPercentage
}

// GetApiPercentageOk returns a tuple with the ApiPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetApiPercentageOk() (*float64, bool) {
	if o == nil || o.ApiPercentage == nil {
		return nil, false
	}
	return o.ApiPercentage, true
}

// HasApiPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasApiPercentage() bool {
	if o != nil && o.ApiPercentage != nil {
		return true
	}

	return false
}

// SetApiPercentage gets a reference to the given float64 and assigns it to the ApiPercentage field.
func (o *UsageAttributionValues) SetApiPercentage(v float64) {
	o.ApiPercentage = &v
}

// GetApiUsage returns the ApiUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetApiUsage() float64 {
	if o == nil || o.ApiUsage == nil {
		var ret float64
		return ret
	}
	return *o.ApiUsage
}

// GetApiUsageOk returns a tuple with the ApiUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetApiUsageOk() (*float64, bool) {
	if o == nil || o.ApiUsage == nil {
		return nil, false
	}
	return o.ApiUsage, true
}

// HasApiUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasApiUsage() bool {
	if o != nil && o.ApiUsage != nil {
		return true
	}

	return false
}

// SetApiUsage gets a reference to the given float64 and assigns it to the ApiUsage field.
func (o *UsageAttributionValues) SetApiUsage(v float64) {
	o.ApiUsage = &v
}

// GetApmHostPercentage returns the ApmHostPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetApmHostPercentage() float64 {
	if o == nil || o.ApmHostPercentage == nil {
		var ret float64
		return ret
	}
	return *o.ApmHostPercentage
}

// GetApmHostPercentageOk returns a tuple with the ApmHostPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetApmHostPercentageOk() (*float64, bool) {
	if o == nil || o.ApmHostPercentage == nil {
		return nil, false
	}
	return o.ApmHostPercentage, true
}

// HasApmHostPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasApmHostPercentage() bool {
	if o != nil && o.ApmHostPercentage != nil {
		return true
	}

	return false
}

// SetApmHostPercentage gets a reference to the given float64 and assigns it to the ApmHostPercentage field.
func (o *UsageAttributionValues) SetApmHostPercentage(v float64) {
	o.ApmHostPercentage = &v
}

// GetApmHostUsage returns the ApmHostUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetApmHostUsage() float64 {
	if o == nil || o.ApmHostUsage == nil {
		var ret float64
		return ret
	}
	return *o.ApmHostUsage
}

// GetApmHostUsageOk returns a tuple with the ApmHostUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetApmHostUsageOk() (*float64, bool) {
	if o == nil || o.ApmHostUsage == nil {
		return nil, false
	}
	return o.ApmHostUsage, true
}

// HasApmHostUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasApmHostUsage() bool {
	if o != nil && o.ApmHostUsage != nil {
		return true
	}

	return false
}

// SetApmHostUsage gets a reference to the given float64 and assigns it to the ApmHostUsage field.
func (o *UsageAttributionValues) SetApmHostUsage(v float64) {
	o.ApmHostUsage = &v
}

// GetBrowserPercentage returns the BrowserPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetBrowserPercentage() float64 {
	if o == nil || o.BrowserPercentage == nil {
		var ret float64
		return ret
	}
	return *o.BrowserPercentage
}

// GetBrowserPercentageOk returns a tuple with the BrowserPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetBrowserPercentageOk() (*float64, bool) {
	if o == nil || o.BrowserPercentage == nil {
		return nil, false
	}
	return o.BrowserPercentage, true
}

// HasBrowserPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasBrowserPercentage() bool {
	if o != nil && o.BrowserPercentage != nil {
		return true
	}

	return false
}

// SetBrowserPercentage gets a reference to the given float64 and assigns it to the BrowserPercentage field.
func (o *UsageAttributionValues) SetBrowserPercentage(v float64) {
	o.BrowserPercentage = &v
}

// GetBrowserUsage returns the BrowserUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetBrowserUsage() float64 {
	if o == nil || o.BrowserUsage == nil {
		var ret float64
		return ret
	}
	return *o.BrowserUsage
}

// GetBrowserUsageOk returns a tuple with the BrowserUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetBrowserUsageOk() (*float64, bool) {
	if o == nil || o.BrowserUsage == nil {
		return nil, false
	}
	return o.BrowserUsage, true
}

// HasBrowserUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasBrowserUsage() bool {
	if o != nil && o.BrowserUsage != nil {
		return true
	}

	return false
}

// SetBrowserUsage gets a reference to the given float64 and assigns it to the BrowserUsage field.
func (o *UsageAttributionValues) SetBrowserUsage(v float64) {
	o.BrowserUsage = &v
}

// GetContainerPercentage returns the ContainerPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetContainerPercentage() float64 {
	if o == nil || o.ContainerPercentage == nil {
		var ret float64
		return ret
	}
	return *o.ContainerPercentage
}

// GetContainerPercentageOk returns a tuple with the ContainerPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetContainerPercentageOk() (*float64, bool) {
	if o == nil || o.ContainerPercentage == nil {
		return nil, false
	}
	return o.ContainerPercentage, true
}

// HasContainerPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasContainerPercentage() bool {
	if o != nil && o.ContainerPercentage != nil {
		return true
	}

	return false
}

// SetContainerPercentage gets a reference to the given float64 and assigns it to the ContainerPercentage field.
func (o *UsageAttributionValues) SetContainerPercentage(v float64) {
	o.ContainerPercentage = &v
}

// GetContainerUsage returns the ContainerUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetContainerUsage() float64 {
	if o == nil || o.ContainerUsage == nil {
		var ret float64
		return ret
	}
	return *o.ContainerUsage
}

// GetContainerUsageOk returns a tuple with the ContainerUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetContainerUsageOk() (*float64, bool) {
	if o == nil || o.ContainerUsage == nil {
		return nil, false
	}
	return o.ContainerUsage, true
}

// HasContainerUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasContainerUsage() bool {
	if o != nil && o.ContainerUsage != nil {
		return true
	}

	return false
}

// SetContainerUsage gets a reference to the given float64 and assigns it to the ContainerUsage field.
func (o *UsageAttributionValues) SetContainerUsage(v float64) {
	o.ContainerUsage = &v
}

// GetCustomTimeseriesPercentage returns the CustomTimeseriesPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCustomTimeseriesPercentage() float64 {
	if o == nil || o.CustomTimeseriesPercentage == nil {
		var ret float64
		return ret
	}
	return *o.CustomTimeseriesPercentage
}

// GetCustomTimeseriesPercentageOk returns a tuple with the CustomTimeseriesPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCustomTimeseriesPercentageOk() (*float64, bool) {
	if o == nil || o.CustomTimeseriesPercentage == nil {
		return nil, false
	}
	return o.CustomTimeseriesPercentage, true
}

// HasCustomTimeseriesPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCustomTimeseriesPercentage() bool {
	if o != nil && o.CustomTimeseriesPercentage != nil {
		return true
	}

	return false
}

// SetCustomTimeseriesPercentage gets a reference to the given float64 and assigns it to the CustomTimeseriesPercentage field.
func (o *UsageAttributionValues) SetCustomTimeseriesPercentage(v float64) {
	o.CustomTimeseriesPercentage = &v
}

// GetCustomTimeseriesUsage returns the CustomTimeseriesUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCustomTimeseriesUsage() float64 {
	if o == nil || o.CustomTimeseriesUsage == nil {
		var ret float64
		return ret
	}
	return *o.CustomTimeseriesUsage
}

// GetCustomTimeseriesUsageOk returns a tuple with the CustomTimeseriesUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCustomTimeseriesUsageOk() (*float64, bool) {
	if o == nil || o.CustomTimeseriesUsage == nil {
		return nil, false
	}
	return o.CustomTimeseriesUsage, true
}

// HasCustomTimeseriesUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCustomTimeseriesUsage() bool {
	if o != nil && o.CustomTimeseriesUsage != nil {
		return true
	}

	return false
}

// SetCustomTimeseriesUsage gets a reference to the given float64 and assigns it to the CustomTimeseriesUsage field.
func (o *UsageAttributionValues) SetCustomTimeseriesUsage(v float64) {
	o.CustomTimeseriesUsage = &v
}

// GetCwsContainerPercentage returns the CwsContainerPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCwsContainerPercentage() float64 {
	if o == nil || o.CwsContainerPercentage == nil {
		var ret float64
		return ret
	}
	return *o.CwsContainerPercentage
}

// GetCwsContainerPercentageOk returns a tuple with the CwsContainerPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCwsContainerPercentageOk() (*float64, bool) {
	if o == nil || o.CwsContainerPercentage == nil {
		return nil, false
	}
	return o.CwsContainerPercentage, true
}

// HasCwsContainerPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCwsContainerPercentage() bool {
	if o != nil && o.CwsContainerPercentage != nil {
		return true
	}

	return false
}

// SetCwsContainerPercentage gets a reference to the given float64 and assigns it to the CwsContainerPercentage field.
func (o *UsageAttributionValues) SetCwsContainerPercentage(v float64) {
	o.CwsContainerPercentage = &v
}

// GetCwsContainerUsage returns the CwsContainerUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCwsContainerUsage() float64 {
	if o == nil || o.CwsContainerUsage == nil {
		var ret float64
		return ret
	}
	return *o.CwsContainerUsage
}

// GetCwsContainerUsageOk returns a tuple with the CwsContainerUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCwsContainerUsageOk() (*float64, bool) {
	if o == nil || o.CwsContainerUsage == nil {
		return nil, false
	}
	return o.CwsContainerUsage, true
}

// HasCwsContainerUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCwsContainerUsage() bool {
	if o != nil && o.CwsContainerUsage != nil {
		return true
	}

	return false
}

// SetCwsContainerUsage gets a reference to the given float64 and assigns it to the CwsContainerUsage field.
func (o *UsageAttributionValues) SetCwsContainerUsage(v float64) {
	o.CwsContainerUsage = &v
}

// GetCwsHostPercentage returns the CwsHostPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCwsHostPercentage() float64 {
	if o == nil || o.CwsHostPercentage == nil {
		var ret float64
		return ret
	}
	return *o.CwsHostPercentage
}

// GetCwsHostPercentageOk returns a tuple with the CwsHostPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCwsHostPercentageOk() (*float64, bool) {
	if o == nil || o.CwsHostPercentage == nil {
		return nil, false
	}
	return o.CwsHostPercentage, true
}

// HasCwsHostPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCwsHostPercentage() bool {
	if o != nil && o.CwsHostPercentage != nil {
		return true
	}

	return false
}

// SetCwsHostPercentage gets a reference to the given float64 and assigns it to the CwsHostPercentage field.
func (o *UsageAttributionValues) SetCwsHostPercentage(v float64) {
	o.CwsHostPercentage = &v
}

// GetCwsHostUsage returns the CwsHostUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetCwsHostUsage() float64 {
	if o == nil || o.CwsHostUsage == nil {
		var ret float64
		return ret
	}
	return *o.CwsHostUsage
}

// GetCwsHostUsageOk returns a tuple with the CwsHostUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetCwsHostUsageOk() (*float64, bool) {
	if o == nil || o.CwsHostUsage == nil {
		return nil, false
	}
	return o.CwsHostUsage, true
}

// HasCwsHostUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasCwsHostUsage() bool {
	if o != nil && o.CwsHostUsage != nil {
		return true
	}

	return false
}

// SetCwsHostUsage gets a reference to the given float64 and assigns it to the CwsHostUsage field.
func (o *UsageAttributionValues) SetCwsHostUsage(v float64) {
	o.CwsHostUsage = &v
}

// GetInfraHostPercentage returns the InfraHostPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetInfraHostPercentage() float64 {
	if o == nil || o.InfraHostPercentage == nil {
		var ret float64
		return ret
	}
	return *o.InfraHostPercentage
}

// GetInfraHostPercentageOk returns a tuple with the InfraHostPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetInfraHostPercentageOk() (*float64, bool) {
	if o == nil || o.InfraHostPercentage == nil {
		return nil, false
	}
	return o.InfraHostPercentage, true
}

// HasInfraHostPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasInfraHostPercentage() bool {
	if o != nil && o.InfraHostPercentage != nil {
		return true
	}

	return false
}

// SetInfraHostPercentage gets a reference to the given float64 and assigns it to the InfraHostPercentage field.
func (o *UsageAttributionValues) SetInfraHostPercentage(v float64) {
	o.InfraHostPercentage = &v
}

// GetInfraHostUsage returns the InfraHostUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetInfraHostUsage() float64 {
	if o == nil || o.InfraHostUsage == nil {
		var ret float64
		return ret
	}
	return *o.InfraHostUsage
}

// GetInfraHostUsageOk returns a tuple with the InfraHostUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetInfraHostUsageOk() (*float64, bool) {
	if o == nil || o.InfraHostUsage == nil {
		return nil, false
	}
	return o.InfraHostUsage, true
}

// HasInfraHostUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasInfraHostUsage() bool {
	if o != nil && o.InfraHostUsage != nil {
		return true
	}

	return false
}

// SetInfraHostUsage gets a reference to the given float64 and assigns it to the InfraHostUsage field.
func (o *UsageAttributionValues) SetInfraHostUsage(v float64) {
	o.InfraHostUsage = &v
}

// GetLambdaFunctionsPercentage returns the LambdaFunctionsPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaFunctionsPercentage() float64 {
	if o == nil || o.LambdaFunctionsPercentage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaFunctionsPercentage
}

// GetLambdaFunctionsPercentageOk returns a tuple with the LambdaFunctionsPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaFunctionsPercentageOk() (*float64, bool) {
	if o == nil || o.LambdaFunctionsPercentage == nil {
		return nil, false
	}
	return o.LambdaFunctionsPercentage, true
}

// HasLambdaFunctionsPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaFunctionsPercentage() bool {
	if o != nil && o.LambdaFunctionsPercentage != nil {
		return true
	}

	return false
}

// SetLambdaFunctionsPercentage gets a reference to the given float64 and assigns it to the LambdaFunctionsPercentage field.
func (o *UsageAttributionValues) SetLambdaFunctionsPercentage(v float64) {
	o.LambdaFunctionsPercentage = &v
}

// GetLambdaFunctionsUsage returns the LambdaFunctionsUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaFunctionsUsage() float64 {
	if o == nil || o.LambdaFunctionsUsage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaFunctionsUsage
}

// GetLambdaFunctionsUsageOk returns a tuple with the LambdaFunctionsUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaFunctionsUsageOk() (*float64, bool) {
	if o == nil || o.LambdaFunctionsUsage == nil {
		return nil, false
	}
	return o.LambdaFunctionsUsage, true
}

// HasLambdaFunctionsUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaFunctionsUsage() bool {
	if o != nil && o.LambdaFunctionsUsage != nil {
		return true
	}

	return false
}

// SetLambdaFunctionsUsage gets a reference to the given float64 and assigns it to the LambdaFunctionsUsage field.
func (o *UsageAttributionValues) SetLambdaFunctionsUsage(v float64) {
	o.LambdaFunctionsUsage = &v
}

// GetLambdaInvocationsPercentage returns the LambdaInvocationsPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaInvocationsPercentage() float64 {
	if o == nil || o.LambdaInvocationsPercentage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaInvocationsPercentage
}

// GetLambdaInvocationsPercentageOk returns a tuple with the LambdaInvocationsPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaInvocationsPercentageOk() (*float64, bool) {
	if o == nil || o.LambdaInvocationsPercentage == nil {
		return nil, false
	}
	return o.LambdaInvocationsPercentage, true
}

// HasLambdaInvocationsPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaInvocationsPercentage() bool {
	if o != nil && o.LambdaInvocationsPercentage != nil {
		return true
	}

	return false
}

// SetLambdaInvocationsPercentage gets a reference to the given float64 and assigns it to the LambdaInvocationsPercentage field.
func (o *UsageAttributionValues) SetLambdaInvocationsPercentage(v float64) {
	o.LambdaInvocationsPercentage = &v
}

// GetLambdaInvocationsUsage returns the LambdaInvocationsUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaInvocationsUsage() float64 {
	if o == nil || o.LambdaInvocationsUsage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaInvocationsUsage
}

// GetLambdaInvocationsUsageOk returns a tuple with the LambdaInvocationsUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaInvocationsUsageOk() (*float64, bool) {
	if o == nil || o.LambdaInvocationsUsage == nil {
		return nil, false
	}
	return o.LambdaInvocationsUsage, true
}

// HasLambdaInvocationsUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaInvocationsUsage() bool {
	if o != nil && o.LambdaInvocationsUsage != nil {
		return true
	}

	return false
}

// SetLambdaInvocationsUsage gets a reference to the given float64 and assigns it to the LambdaInvocationsUsage field.
func (o *UsageAttributionValues) SetLambdaInvocationsUsage(v float64) {
	o.LambdaInvocationsUsage = &v
}

// GetLambdaPercentage returns the LambdaPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaPercentage() float64 {
	if o == nil || o.LambdaPercentage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaPercentage
}

// GetLambdaPercentageOk returns a tuple with the LambdaPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaPercentageOk() (*float64, bool) {
	if o == nil || o.LambdaPercentage == nil {
		return nil, false
	}
	return o.LambdaPercentage, true
}

// HasLambdaPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaPercentage() bool {
	if o != nil && o.LambdaPercentage != nil {
		return true
	}

	return false
}

// SetLambdaPercentage gets a reference to the given float64 and assigns it to the LambdaPercentage field.
func (o *UsageAttributionValues) SetLambdaPercentage(v float64) {
	o.LambdaPercentage = &v
}

// GetLambdaUsage returns the LambdaUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetLambdaUsage() float64 {
	if o == nil || o.LambdaUsage == nil {
		var ret float64
		return ret
	}
	return *o.LambdaUsage
}

// GetLambdaUsageOk returns a tuple with the LambdaUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetLambdaUsageOk() (*float64, bool) {
	if o == nil || o.LambdaUsage == nil {
		return nil, false
	}
	return o.LambdaUsage, true
}

// HasLambdaUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasLambdaUsage() bool {
	if o != nil && o.LambdaUsage != nil {
		return true
	}

	return false
}

// SetLambdaUsage gets a reference to the given float64 and assigns it to the LambdaUsage field.
func (o *UsageAttributionValues) SetLambdaUsage(v float64) {
	o.LambdaUsage = &v
}

// GetNpmHostPercentage returns the NpmHostPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetNpmHostPercentage() float64 {
	if o == nil || o.NpmHostPercentage == nil {
		var ret float64
		return ret
	}
	return *o.NpmHostPercentage
}

// GetNpmHostPercentageOk returns a tuple with the NpmHostPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetNpmHostPercentageOk() (*float64, bool) {
	if o == nil || o.NpmHostPercentage == nil {
		return nil, false
	}
	return o.NpmHostPercentage, true
}

// HasNpmHostPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasNpmHostPercentage() bool {
	if o != nil && o.NpmHostPercentage != nil {
		return true
	}

	return false
}

// SetNpmHostPercentage gets a reference to the given float64 and assigns it to the NpmHostPercentage field.
func (o *UsageAttributionValues) SetNpmHostPercentage(v float64) {
	o.NpmHostPercentage = &v
}

// GetNpmHostUsage returns the NpmHostUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetNpmHostUsage() float64 {
	if o == nil || o.NpmHostUsage == nil {
		var ret float64
		return ret
	}
	return *o.NpmHostUsage
}

// GetNpmHostUsageOk returns a tuple with the NpmHostUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetNpmHostUsageOk() (*float64, bool) {
	if o == nil || o.NpmHostUsage == nil {
		return nil, false
	}
	return o.NpmHostUsage, true
}

// HasNpmHostUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasNpmHostUsage() bool {
	if o != nil && o.NpmHostUsage != nil {
		return true
	}

	return false
}

// SetNpmHostUsage gets a reference to the given float64 and assigns it to the NpmHostUsage field.
func (o *UsageAttributionValues) SetNpmHostUsage(v float64) {
	o.NpmHostUsage = &v
}

// GetProfiledContainersPercentage returns the ProfiledContainersPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetProfiledContainersPercentage() float64 {
	if o == nil || o.ProfiledContainersPercentage == nil {
		var ret float64
		return ret
	}
	return *o.ProfiledContainersPercentage
}

// GetProfiledContainersPercentageOk returns a tuple with the ProfiledContainersPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetProfiledContainersPercentageOk() (*float64, bool) {
	if o == nil || o.ProfiledContainersPercentage == nil {
		return nil, false
	}
	return o.ProfiledContainersPercentage, true
}

// HasProfiledContainersPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasProfiledContainersPercentage() bool {
	if o != nil && o.ProfiledContainersPercentage != nil {
		return true
	}

	return false
}

// SetProfiledContainersPercentage gets a reference to the given float64 and assigns it to the ProfiledContainersPercentage field.
func (o *UsageAttributionValues) SetProfiledContainersPercentage(v float64) {
	o.ProfiledContainersPercentage = &v
}

// GetProfiledContainersUsage returns the ProfiledContainersUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetProfiledContainersUsage() float64 {
	if o == nil || o.ProfiledContainersUsage == nil {
		var ret float64
		return ret
	}
	return *o.ProfiledContainersUsage
}

// GetProfiledContainersUsageOk returns a tuple with the ProfiledContainersUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetProfiledContainersUsageOk() (*float64, bool) {
	if o == nil || o.ProfiledContainersUsage == nil {
		return nil, false
	}
	return o.ProfiledContainersUsage, true
}

// HasProfiledContainersUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasProfiledContainersUsage() bool {
	if o != nil && o.ProfiledContainersUsage != nil {
		return true
	}

	return false
}

// SetProfiledContainersUsage gets a reference to the given float64 and assigns it to the ProfiledContainersUsage field.
func (o *UsageAttributionValues) SetProfiledContainersUsage(v float64) {
	o.ProfiledContainersUsage = &v
}

// GetProfiledHostsPercentage returns the ProfiledHostsPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetProfiledHostsPercentage() float64 {
	if o == nil || o.ProfiledHostsPercentage == nil {
		var ret float64
		return ret
	}
	return *o.ProfiledHostsPercentage
}

// GetProfiledHostsPercentageOk returns a tuple with the ProfiledHostsPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetProfiledHostsPercentageOk() (*float64, bool) {
	if o == nil || o.ProfiledHostsPercentage == nil {
		return nil, false
	}
	return o.ProfiledHostsPercentage, true
}

// HasProfiledHostsPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasProfiledHostsPercentage() bool {
	if o != nil && o.ProfiledHostsPercentage != nil {
		return true
	}

	return false
}

// SetProfiledHostsPercentage gets a reference to the given float64 and assigns it to the ProfiledHostsPercentage field.
func (o *UsageAttributionValues) SetProfiledHostsPercentage(v float64) {
	o.ProfiledHostsPercentage = &v
}

// GetProfiledHostsUsage returns the ProfiledHostsUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetProfiledHostsUsage() float64 {
	if o == nil || o.ProfiledHostsUsage == nil {
		var ret float64
		return ret
	}
	return *o.ProfiledHostsUsage
}

// GetProfiledHostsUsageOk returns a tuple with the ProfiledHostsUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetProfiledHostsUsageOk() (*float64, bool) {
	if o == nil || o.ProfiledHostsUsage == nil {
		return nil, false
	}
	return o.ProfiledHostsUsage, true
}

// HasProfiledHostsUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasProfiledHostsUsage() bool {
	if o != nil && o.ProfiledHostsUsage != nil {
		return true
	}

	return false
}

// SetProfiledHostsUsage gets a reference to the given float64 and assigns it to the ProfiledHostsUsage field.
func (o *UsageAttributionValues) SetProfiledHostsUsage(v float64) {
	o.ProfiledHostsUsage = &v
}

// GetSnmpPercentage returns the SnmpPercentage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetSnmpPercentage() float64 {
	if o == nil || o.SnmpPercentage == nil {
		var ret float64
		return ret
	}
	return *o.SnmpPercentage
}

// GetSnmpPercentageOk returns a tuple with the SnmpPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetSnmpPercentageOk() (*float64, bool) {
	if o == nil || o.SnmpPercentage == nil {
		return nil, false
	}
	return o.SnmpPercentage, true
}

// HasSnmpPercentage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasSnmpPercentage() bool {
	if o != nil && o.SnmpPercentage != nil {
		return true
	}

	return false
}

// SetSnmpPercentage gets a reference to the given float64 and assigns it to the SnmpPercentage field.
func (o *UsageAttributionValues) SetSnmpPercentage(v float64) {
	o.SnmpPercentage = &v
}

// GetSnmpUsage returns the SnmpUsage field value if set, zero value otherwise.
func (o *UsageAttributionValues) GetSnmpUsage() float64 {
	if o == nil || o.SnmpUsage == nil {
		var ret float64
		return ret
	}
	return *o.SnmpUsage
}

// GetSnmpUsageOk returns a tuple with the SnmpUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageAttributionValues) GetSnmpUsageOk() (*float64, bool) {
	if o == nil || o.SnmpUsage == nil {
		return nil, false
	}
	return o.SnmpUsage, true
}

// HasSnmpUsage returns a boolean if a field has been set.
func (o *UsageAttributionValues) HasSnmpUsage() bool {
	if o != nil && o.SnmpUsage != nil {
		return true
	}

	return false
}

// SetSnmpUsage gets a reference to the given float64 and assigns it to the SnmpUsage field.
func (o *UsageAttributionValues) SetSnmpUsage(v float64) {
	o.SnmpUsage = &v
}

func (o UsageAttributionValues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiPercentage != nil {
		toSerialize["api_percentage"] = o.ApiPercentage
	}
	if o.ApiUsage != nil {
		toSerialize["api_usage"] = o.ApiUsage
	}
	if o.ApmHostPercentage != nil {
		toSerialize["apm_host_percentage"] = o.ApmHostPercentage
	}
	if o.ApmHostUsage != nil {
		toSerialize["apm_host_usage"] = o.ApmHostUsage
	}
	if o.BrowserPercentage != nil {
		toSerialize["browser_percentage"] = o.BrowserPercentage
	}
	if o.BrowserUsage != nil {
		toSerialize["browser_usage"] = o.BrowserUsage
	}
	if o.ContainerPercentage != nil {
		toSerialize["container_percentage"] = o.ContainerPercentage
	}
	if o.ContainerUsage != nil {
		toSerialize["container_usage"] = o.ContainerUsage
	}
	if o.CustomTimeseriesPercentage != nil {
		toSerialize["custom_timeseries_percentage"] = o.CustomTimeseriesPercentage
	}
	if o.CustomTimeseriesUsage != nil {
		toSerialize["custom_timeseries_usage"] = o.CustomTimeseriesUsage
	}
	if o.CwsContainerPercentage != nil {
		toSerialize["cws_container_percentage"] = o.CwsContainerPercentage
	}
	if o.CwsContainerUsage != nil {
		toSerialize["cws_container_usage"] = o.CwsContainerUsage
	}
	if o.CwsHostPercentage != nil {
		toSerialize["cws_host_percentage"] = o.CwsHostPercentage
	}
	if o.CwsHostUsage != nil {
		toSerialize["cws_host_usage"] = o.CwsHostUsage
	}
	if o.InfraHostPercentage != nil {
		toSerialize["infra_host_percentage"] = o.InfraHostPercentage
	}
	if o.InfraHostUsage != nil {
		toSerialize["infra_host_usage"] = o.InfraHostUsage
	}
	if o.LambdaFunctionsPercentage != nil {
		toSerialize["lambda_functions_percentage"] = o.LambdaFunctionsPercentage
	}
	if o.LambdaFunctionsUsage != nil {
		toSerialize["lambda_functions_usage"] = o.LambdaFunctionsUsage
	}
	if o.LambdaInvocationsPercentage != nil {
		toSerialize["lambda_invocations_percentage"] = o.LambdaInvocationsPercentage
	}
	if o.LambdaInvocationsUsage != nil {
		toSerialize["lambda_invocations_usage"] = o.LambdaInvocationsUsage
	}
	if o.LambdaPercentage != nil {
		toSerialize["lambda_percentage"] = o.LambdaPercentage
	}
	if o.LambdaUsage != nil {
		toSerialize["lambda_usage"] = o.LambdaUsage
	}
	if o.NpmHostPercentage != nil {
		toSerialize["npm_host_percentage"] = o.NpmHostPercentage
	}
	if o.NpmHostUsage != nil {
		toSerialize["npm_host_usage"] = o.NpmHostUsage
	}
	if o.ProfiledContainersPercentage != nil {
		toSerialize["profiled_containers_percentage"] = o.ProfiledContainersPercentage
	}
	if o.ProfiledContainersUsage != nil {
		toSerialize["profiled_containers_usage"] = o.ProfiledContainersUsage
	}
	if o.ProfiledHostsPercentage != nil {
		toSerialize["profiled_hosts_percentage"] = o.ProfiledHostsPercentage
	}
	if o.ProfiledHostsUsage != nil {
		toSerialize["profiled_hosts_usage"] = o.ProfiledHostsUsage
	}
	if o.SnmpPercentage != nil {
		toSerialize["snmp_percentage"] = o.SnmpPercentage
	}
	if o.SnmpUsage != nil {
		toSerialize["snmp_usage"] = o.SnmpUsage
	}
	return json.Marshal(toSerialize)
}

type NullableUsageAttributionValues struct {
	value *UsageAttributionValues
	isSet bool
}

func (v NullableUsageAttributionValues) Get() *UsageAttributionValues {
	return v.value
}

func (v *NullableUsageAttributionValues) Set(val *UsageAttributionValues) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageAttributionValues) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageAttributionValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageAttributionValues(val *UsageAttributionValues) *NullableUsageAttributionValues {
	return &NullableUsageAttributionValues{value: val, isSet: true}
}

func (v NullableUsageAttributionValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageAttributionValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
