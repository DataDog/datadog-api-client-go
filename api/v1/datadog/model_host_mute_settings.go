/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// HostMuteSettings struct for HostMuteSettings
type HostMuteSettings struct {
	// POSIX timestamp in seconds when the host is unmuted. If omitted, the host remains muted until explicitly unmuted.
	End *int64 `json:"end,omitempty"`
	// Message to associate with the muting of this host.
	Message *string `json:"message,omitempty"`
	// If true and the host is already muted, replaces existing host mute settings.
	Override *bool `json:"override,omitempty"`
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *HostMuteSettings) GetEnd() int64 {
	if o == nil || o.End == nil {
		var ret int64
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HostMuteSettings) GetEndOk() (int64, bool) {
	if o == nil || o.End == nil {
		var ret int64
		return ret, false
	}
	return *o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *HostMuteSettings) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int64 and assigns it to the End field.
func (o *HostMuteSettings) SetEnd(v int64) {
	o.End = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HostMuteSettings) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HostMuteSettings) GetMessageOk() (string, bool) {
	if o == nil || o.Message == nil {
		var ret string
		return ret, false
	}
	return *o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *HostMuteSettings) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HostMuteSettings) SetMessage(v string) {
	o.Message = &v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *HostMuteSettings) GetOverride() bool {
	if o == nil || o.Override == nil {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HostMuteSettings) GetOverrideOk() (bool, bool) {
	if o == nil || o.Override == nil {
		var ret bool
		return ret, false
	}
	return *o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *HostMuteSettings) HasOverride() bool {
	if o != nil && o.Override != nil {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *HostMuteSettings) SetOverride(v bool) {
	o.Override = &v
}

type NullableHostMuteSettings struct {
	Value        HostMuteSettings
	ExplicitNull bool
}

func (v NullableHostMuteSettings) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableHostMuteSettings) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
