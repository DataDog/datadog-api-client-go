/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// OrgCreateResponse struct for OrgCreateResponse
type OrgCreateResponse struct {
	ApiKey         *ApiKey         `json:"api_key,omitempty"`
	ApplicationKey *ApplicationKey `json:"application_key,omitempty"`
	Org            *Org            `json:"org,omitempty"`
	User           *User           `json:"user,omitempty"`
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *OrgCreateResponse) GetApiKey() ApiKey {
	if o == nil || o.ApiKey == nil {
		var ret ApiKey
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OrgCreateResponse) GetApiKeyOk() (ApiKey, bool) {
	if o == nil || o.ApiKey == nil {
		var ret ApiKey
		return ret, false
	}
	return *o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *OrgCreateResponse) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given ApiKey and assigns it to the ApiKey field.
func (o *OrgCreateResponse) SetApiKey(v ApiKey) {
	o.ApiKey = &v
}

// GetApplicationKey returns the ApplicationKey field value if set, zero value otherwise.
func (o *OrgCreateResponse) GetApplicationKey() ApplicationKey {
	if o == nil || o.ApplicationKey == nil {
		var ret ApplicationKey
		return ret
	}
	return *o.ApplicationKey
}

// GetApplicationKeyOk returns a tuple with the ApplicationKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OrgCreateResponse) GetApplicationKeyOk() (ApplicationKey, bool) {
	if o == nil || o.ApplicationKey == nil {
		var ret ApplicationKey
		return ret, false
	}
	return *o.ApplicationKey, true
}

// HasApplicationKey returns a boolean if a field has been set.
func (o *OrgCreateResponse) HasApplicationKey() bool {
	if o != nil && o.ApplicationKey != nil {
		return true
	}

	return false
}

// SetApplicationKey gets a reference to the given ApplicationKey and assigns it to the ApplicationKey field.
func (o *OrgCreateResponse) SetApplicationKey(v ApplicationKey) {
	o.ApplicationKey = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *OrgCreateResponse) GetOrg() Org {
	if o == nil || o.Org == nil {
		var ret Org
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OrgCreateResponse) GetOrgOk() (Org, bool) {
	if o == nil || o.Org == nil {
		var ret Org
		return ret, false
	}
	return *o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *OrgCreateResponse) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given Org and assigns it to the Org field.
func (o *OrgCreateResponse) SetOrg(v Org) {
	o.Org = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OrgCreateResponse) GetUser() User {
	if o == nil || o.User == nil {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OrgCreateResponse) GetUserOk() (User, bool) {
	if o == nil || o.User == nil {
		var ret User
		return ret, false
	}
	return *o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OrgCreateResponse) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *OrgCreateResponse) SetUser(v User) {
	o.User = &v
}

type NullableOrgCreateResponse struct {
	Value        OrgCreateResponse
	ExplicitNull bool
}

func (v NullableOrgCreateResponse) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableOrgCreateResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
