/*
 * Datadog API Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * API version: 1.0
 * Contact: support@datadoghq.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog
// LogsProcessor Definition of a logs processor.
type LogsProcessor struct {
	Grok LogsGrokParserRules `json:"grok"`
	// Whether or not the processor is enabled.
	IsEnabled bool `json:"is_enabled,omitempty"`
	// Name of the processor.
	Name string `json:"name,omitempty"`
	// List of sample logs to test this grok parser.
	Samples []string `json:"samples,omitempty"`
	// Source attribute used to perform the lookup.
	Source string `json:"source"`
	Type LogsTraceRemapperType `json:"type"`
	// Array of source attributes.
	Sources []string `json:"sources"`
	// Override or not the target element if already set,
	OverrideOnConflict bool `json:"override_on_conflict,omitempty"`
	// Remove or preserve the remapped source element.
	PreserveSource bool `json:"preserve_source,omitempty"`
	// Defines if the sources are from log `attribute` or `tag`.
	SourceType string `json:"source_type,omitempty"`
	// Name of the attribute that contains the corresponding value in the mapping list or the `default_lookup` if not found in the mapping list.
	Target string `json:"target"`
	// Defines if the sources are from log `attribute` or `tag`.
	TargetType string `json:"target_type,omitempty"`
	// Normalize the ending slashes or not.
	NormalizeEndingSlashes *bool `json:"normalize_ending_slashes,omitempty"`
	// Define if the source attribute is URL encoded or not.
	IsEncoded bool `json:"is_encoded,omitempty"`
	// Array of filters to match or not a log and their corresponding `name`to assign a custom value to the log.
	Categories []LogsCategoryProcessorCategories `json:"categories"`
	// Arithmetic operation between one or more log attributes.
	Expression string `json:"expression"`
	// If true, it replaces all missing attributes of `template` by an empty string. If `false` (default), skips the operation for missing attributes.
	IsReplaceMissing bool `json:"is_replace_missing,omitempty"`
	// A formula with one or more attributes and raw text.
	Template string `json:"template"`
	Filter LogsFilter `json:"filter,omitempty"`
	// Ordered list of processors in this pipeline.
	Processors []LogsProcessor `json:"processors,omitempty"`
	// Value to set the target attribute if the source value is not found in the list.
	DefaultLookup string `json:"default_lookup,omitempty"`
	// Mapping table of values for the source attribute and their associated target attribute values, formatted as `[\"source_key1,target_value1\", \"source_key2,target_value2\"]`
	LookupTable []string `json:"lookup_table"`
}
