/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// ServiceLevelObjectivesBulkDeletedData struct for ServiceLevelObjectivesBulkDeletedData
type ServiceLevelObjectivesBulkDeletedData struct {
	// An array of service level objective object IDs that indicates which objects that were completely deleted.
	Deleted *[]string `json:"deleted,omitempty"`
	// An array of service level objective object IDs that indicates which objects that were modified (objects for which at least one threshold was deleted, but that were not completely deleted).
	Updated *[]string `json:"updated,omitempty"`
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ServiceLevelObjectivesBulkDeletedData) GetDeleted() []string {
	if o == nil || o.Deleted == nil {
		var ret []string
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLevelObjectivesBulkDeletedData) GetDeletedOk() ([]string, bool) {
	if o == nil || o.Deleted == nil {
		var ret []string
		return ret, false
	}
	return *o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ServiceLevelObjectivesBulkDeletedData) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given []string and assigns it to the Deleted field.
func (o *ServiceLevelObjectivesBulkDeletedData) SetDeleted(v []string) {
	o.Deleted = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ServiceLevelObjectivesBulkDeletedData) GetUpdated() []string {
	if o == nil || o.Updated == nil {
		var ret []string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLevelObjectivesBulkDeletedData) GetUpdatedOk() ([]string, bool) {
	if o == nil || o.Updated == nil {
		var ret []string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ServiceLevelObjectivesBulkDeletedData) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given []string and assigns it to the Updated field.
func (o *ServiceLevelObjectivesBulkDeletedData) SetUpdated(v []string) {
	o.Updated = &v
}

type NullableServiceLevelObjectivesBulkDeletedData struct {
	Value        ServiceLevelObjectivesBulkDeletedData
	ExplicitNull bool
}

func (v NullableServiceLevelObjectivesBulkDeletedData) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableServiceLevelObjectivesBulkDeletedData) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
