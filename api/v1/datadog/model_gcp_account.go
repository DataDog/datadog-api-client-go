/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// GcpAccount struct for GcpAccount
type GcpAccount struct {
	// Should be https://www.googleapis.com/oauth2/v1/certs.
	AuthProviderX509CertUrl *string `json:"auth_provider_x509_cert_url,omitempty"`
	// Should be https://accounts.google.com/o/oauth2/auth.
	AuthUri *string `json:"auth_uri,omitempty"`
	// Silence monitors for expected GCE instance shutdowns.
	Automute *bool `json:"automute,omitempty"`
	// Your email found in your JSON service account key.
	ClientEmail *string `json:"client_email,omitempty"`
	// Your ID found in your JSON service account key.
	ClientId *string `json:"client_id,omitempty"`
	// Should be https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL> where <CLIENT_EMAIL> is the email found in your JSON service account key.
	ClientX509CertUrl *string   `json:"client_x509_cert_url,omitempty"`
	Errors            *[]string `json:"errors,omitempty"`
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters *string `json:"host_filters,omitempty"`
	// Your private key name found in your JSON service account key.
	PrivateKey *string `json:"private_key,omitempty"`
	// Your private key ID found in your JSON service account key.
	PrivateKeyId *string `json:"private_key_id,omitempty"`
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId *string `json:"project_id,omitempty"`
	// Should be https://accounts.google.com/o/oauth2/token.
	TokenUri *string `json:"token_uri,omitempty"`
	// The value for service_account found in your JSON service account key.
	Type *string `json:"type,omitempty"`
}

// GetAuthProviderX509CertUrl returns the AuthProviderX509CertUrl field value if set, zero value otherwise.
func (o *GcpAccount) GetAuthProviderX509CertUrl() string {
	if o == nil || o.AuthProviderX509CertUrl == nil {
		var ret string
		return ret
	}
	return *o.AuthProviderX509CertUrl
}

// GetAuthProviderX509CertUrlOk returns a tuple with the AuthProviderX509CertUrl field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetAuthProviderX509CertUrlOk() (string, bool) {
	if o == nil || o.AuthProviderX509CertUrl == nil {
		var ret string
		return ret, false
	}
	return *o.AuthProviderX509CertUrl, true
}

// HasAuthProviderX509CertUrl returns a boolean if a field has been set.
func (o *GcpAccount) HasAuthProviderX509CertUrl() bool {
	if o != nil && o.AuthProviderX509CertUrl != nil {
		return true
	}

	return false
}

// SetAuthProviderX509CertUrl gets a reference to the given string and assigns it to the AuthProviderX509CertUrl field.
func (o *GcpAccount) SetAuthProviderX509CertUrl(v string) {
	o.AuthProviderX509CertUrl = &v
}

// GetAuthUri returns the AuthUri field value if set, zero value otherwise.
func (o *GcpAccount) GetAuthUri() string {
	if o == nil || o.AuthUri == nil {
		var ret string
		return ret
	}
	return *o.AuthUri
}

// GetAuthUriOk returns a tuple with the AuthUri field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetAuthUriOk() (string, bool) {
	if o == nil || o.AuthUri == nil {
		var ret string
		return ret, false
	}
	return *o.AuthUri, true
}

// HasAuthUri returns a boolean if a field has been set.
func (o *GcpAccount) HasAuthUri() bool {
	if o != nil && o.AuthUri != nil {
		return true
	}

	return false
}

// SetAuthUri gets a reference to the given string and assigns it to the AuthUri field.
func (o *GcpAccount) SetAuthUri(v string) {
	o.AuthUri = &v
}

// GetAutomute returns the Automute field value if set, zero value otherwise.
func (o *GcpAccount) GetAutomute() bool {
	if o == nil || o.Automute == nil {
		var ret bool
		return ret
	}
	return *o.Automute
}

// GetAutomuteOk returns a tuple with the Automute field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetAutomuteOk() (bool, bool) {
	if o == nil || o.Automute == nil {
		var ret bool
		return ret, false
	}
	return *o.Automute, true
}

// HasAutomute returns a boolean if a field has been set.
func (o *GcpAccount) HasAutomute() bool {
	if o != nil && o.Automute != nil {
		return true
	}

	return false
}

// SetAutomute gets a reference to the given bool and assigns it to the Automute field.
func (o *GcpAccount) SetAutomute(v bool) {
	o.Automute = &v
}

// GetClientEmail returns the ClientEmail field value if set, zero value otherwise.
func (o *GcpAccount) GetClientEmail() string {
	if o == nil || o.ClientEmail == nil {
		var ret string
		return ret
	}
	return *o.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetClientEmailOk() (string, bool) {
	if o == nil || o.ClientEmail == nil {
		var ret string
		return ret, false
	}
	return *o.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (o *GcpAccount) HasClientEmail() bool {
	if o != nil && o.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail gets a reference to the given string and assigns it to the ClientEmail field.
func (o *GcpAccount) SetClientEmail(v string) {
	o.ClientEmail = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GcpAccount) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetClientIdOk() (string, bool) {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret, false
	}
	return *o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GcpAccount) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GcpAccount) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientX509CertUrl returns the ClientX509CertUrl field value if set, zero value otherwise.
func (o *GcpAccount) GetClientX509CertUrl() string {
	if o == nil || o.ClientX509CertUrl == nil {
		var ret string
		return ret
	}
	return *o.ClientX509CertUrl
}

// GetClientX509CertUrlOk returns a tuple with the ClientX509CertUrl field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetClientX509CertUrlOk() (string, bool) {
	if o == nil || o.ClientX509CertUrl == nil {
		var ret string
		return ret, false
	}
	return *o.ClientX509CertUrl, true
}

// HasClientX509CertUrl returns a boolean if a field has been set.
func (o *GcpAccount) HasClientX509CertUrl() bool {
	if o != nil && o.ClientX509CertUrl != nil {
		return true
	}

	return false
}

// SetClientX509CertUrl gets a reference to the given string and assigns it to the ClientX509CertUrl field.
func (o *GcpAccount) SetClientX509CertUrl(v string) {
	o.ClientX509CertUrl = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GcpAccount) GetErrors() []string {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetErrorsOk() ([]string, bool) {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret, false
	}
	return *o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GcpAccount) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *GcpAccount) SetErrors(v []string) {
	o.Errors = &v
}

// GetHostFilters returns the HostFilters field value if set, zero value otherwise.
func (o *GcpAccount) GetHostFilters() string {
	if o == nil || o.HostFilters == nil {
		var ret string
		return ret
	}
	return *o.HostFilters
}

// GetHostFiltersOk returns a tuple with the HostFilters field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetHostFiltersOk() (string, bool) {
	if o == nil || o.HostFilters == nil {
		var ret string
		return ret, false
	}
	return *o.HostFilters, true
}

// HasHostFilters returns a boolean if a field has been set.
func (o *GcpAccount) HasHostFilters() bool {
	if o != nil && o.HostFilters != nil {
		return true
	}

	return false
}

// SetHostFilters gets a reference to the given string and assigns it to the HostFilters field.
func (o *GcpAccount) SetHostFilters(v string) {
	o.HostFilters = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *GcpAccount) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetPrivateKeyOk() (string, bool) {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret, false
	}
	return *o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *GcpAccount) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *GcpAccount) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPrivateKeyId returns the PrivateKeyId field value if set, zero value otherwise.
func (o *GcpAccount) GetPrivateKeyId() string {
	if o == nil || o.PrivateKeyId == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyId
}

// GetPrivateKeyIdOk returns a tuple with the PrivateKeyId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetPrivateKeyIdOk() (string, bool) {
	if o == nil || o.PrivateKeyId == nil {
		var ret string
		return ret, false
	}
	return *o.PrivateKeyId, true
}

// HasPrivateKeyId returns a boolean if a field has been set.
func (o *GcpAccount) HasPrivateKeyId() bool {
	if o != nil && o.PrivateKeyId != nil {
		return true
	}

	return false
}

// SetPrivateKeyId gets a reference to the given string and assigns it to the PrivateKeyId field.
func (o *GcpAccount) SetPrivateKeyId(v string) {
	o.PrivateKeyId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GcpAccount) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetProjectIdOk() (string, bool) {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret, false
	}
	return *o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GcpAccount) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GcpAccount) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetTokenUri returns the TokenUri field value if set, zero value otherwise.
func (o *GcpAccount) GetTokenUri() string {
	if o == nil || o.TokenUri == nil {
		var ret string
		return ret
	}
	return *o.TokenUri
}

// GetTokenUriOk returns a tuple with the TokenUri field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetTokenUriOk() (string, bool) {
	if o == nil || o.TokenUri == nil {
		var ret string
		return ret, false
	}
	return *o.TokenUri, true
}

// HasTokenUri returns a boolean if a field has been set.
func (o *GcpAccount) HasTokenUri() bool {
	if o != nil && o.TokenUri != nil {
		return true
	}

	return false
}

// SetTokenUri gets a reference to the given string and assigns it to the TokenUri field.
func (o *GcpAccount) SetTokenUri(v string) {
	o.TokenUri = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GcpAccount) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GcpAccount) GetTypeOk() (string, bool) {
	if o == nil || o.Type == nil {
		var ret string
		return ret, false
	}
	return *o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GcpAccount) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GcpAccount) SetType(v string) {
	o.Type = &v
}

type NullableGcpAccount struct {
	Value        GcpAccount
	ExplicitNull bool
}

func (v NullableGcpAccount) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableGcpAccount) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
