/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// MonitorDeviceId the model 'MonitorDeviceId'
type MonitorDeviceId string

// List of MonitorDeviceID
const (
	MONITORDEVICEID_LAPTOP_LARGE MonitorDeviceId = "laptop_large"
	MONITORDEVICEID_TABLET       MonitorDeviceId = "tablet"
	MONITORDEVICEID_MOBILE_SMALL MonitorDeviceId = "mobile_small"
)

// Ptr returns reference to MonitorDeviceID value
func (v MonitorDeviceId) Ptr() *MonitorDeviceId {
	return &v
}

type NullableMonitorDeviceId struct {
	value *MonitorDeviceId
	isSet bool
}

func (v NullableMonitorDeviceId) Get() *MonitorDeviceId {
	return v.value
}

func (v NullableMonitorDeviceId) Set(val *MonitorDeviceId) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorDeviceId) IsSet() bool {
	return v.isSet
}

func (v NullableMonitorDeviceId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorDeviceId(val *MonitorDeviceId) *NullableMonitorDeviceId {
	return &NullableMonitorDeviceId{value: val, isSet: true}
}

func (v NullableMonitorDeviceId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorDeviceId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
