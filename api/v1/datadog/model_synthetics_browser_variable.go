/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// SyntheticsBrowserVariable struct for SyntheticsBrowserVariable
type SyntheticsBrowserVariable struct {
	Example *string                       `json:"example,omitempty"`
	Id      *string                       `json:"id,omitempty"`
	Name    string                        `json:"name"`
	Pattern *string                       `json:"pattern,omitempty"`
	Type    SyntheticsBrowserVariableType `json:"type"`
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *SyntheticsBrowserVariable) GetExample() string {
	if o == nil || o.Example == nil {
		var ret string
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserVariable) GetExampleOk() (string, bool) {
	if o == nil || o.Example == nil {
		var ret string
		return ret, false
	}
	return *o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *SyntheticsBrowserVariable) HasExample() bool {
	if o != nil && o.Example != nil {
		return true
	}

	return false
}

// SetExample gets a reference to the given string and assigns it to the Example field.
func (o *SyntheticsBrowserVariable) SetExample(v string) {
	o.Example = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SyntheticsBrowserVariable) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserVariable) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SyntheticsBrowserVariable) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SyntheticsBrowserVariable) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *SyntheticsBrowserVariable) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *SyntheticsBrowserVariable) SetName(v string) {
	o.Name = v
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *SyntheticsBrowserVariable) GetPattern() string {
	if o == nil || o.Pattern == nil {
		var ret string
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserVariable) GetPatternOk() (string, bool) {
	if o == nil || o.Pattern == nil {
		var ret string
		return ret, false
	}
	return *o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *SyntheticsBrowserVariable) HasPattern() bool {
	if o != nil && o.Pattern != nil {
		return true
	}

	return false
}

// SetPattern gets a reference to the given string and assigns it to the Pattern field.
func (o *SyntheticsBrowserVariable) SetPattern(v string) {
	o.Pattern = &v
}

// GetType returns the Type field value
func (o *SyntheticsBrowserVariable) GetType() SyntheticsBrowserVariableType {
	if o == nil {
		var ret SyntheticsBrowserVariableType
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *SyntheticsBrowserVariable) SetType(v SyntheticsBrowserVariableType) {
	o.Type = v
}

type NullableSyntheticsBrowserVariable struct {
	Value        SyntheticsBrowserVariable
	ExplicitNull bool
}

func (v NullableSyntheticsBrowserVariable) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsBrowserVariable) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
