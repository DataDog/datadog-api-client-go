/*
 * Datadog API Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * API version: 1.0
 * Contact: support@datadoghq.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog
// MonitorOptions List of options associated with your monitor.
type MonitorOptions struct {
	Aggregation MonitorOptionsAggregation `json:"aggregation,omitempty"`
	// IDs of the device the Synthetics monitor is running on.
	DeviceIds []MonitorDeviceId `json:"device_ids,omitempty"`
	// Whether or not to send a log sample when the log monitor triggers.
	EnableLogsSample bool `json:"enable_logs_sample,omitempty"`
	// A message to include with a re-notification. Supports the `@username` notification we allow elsewhere. Not applicable if `renotify_interval` is `None`.
	EscalationMessage string `json:"escalation_message,omitempty"`
	// Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the value is set to `300` (5min), the timeframe is set to `last_5m` and the time is 7:00, the monitor evaluates data from 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor always has data during evaluation.
	EvaluationDelay *int64 `json:"evaluation_delay,omitempty"`
	// A Boolean indicating whether notifications from this monitor automatically inserts its triggering tags into the title.  **Examples** - If `True`, `[Triggered on {host:h1}] Monitor Title` - If `False`, `[Triggered] Monitor Title`
	IncludeTags bool `json:"include_tags,omitempty"`
	// Whether or not the monitor is locked (only editable by creator and admins).
	Locked bool `json:"locked,omitempty"`
	// How long the test should be in failure before alerting (integer, number of seconds, max 7200).
	MinFailureDuration *int64 `json:"min_failure_duration,omitempty"`
	// The minimum number of locations in failure at the same time during at least one moment in the `min_failure_duration` period (`min_location_failed` and `min_failure_duration` are part of the advanced alerting rules - integer, >= 1).
	MinLocationFailed *int64 `json:"min_location_failed,omitempty"`
	// Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor results. Should be a non negative integer.
	NewHostDelay *int64 `json:"new_host_delay,omitempty"`
	// The number of minutes before a monitor notifies after data stops reporting. Datadog recommends at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks. If omitted, 2x the evaluation timeframe is used for metric alerts, and 24 hours is used for service checks.
	NoDataTimeframe *int64 `json:"no_data_timeframe,omitempty"`
	// A Boolean indicating whether tagged users is notified on changes to this monitor.
	NotifyAudit bool `json:"notify_audit,omitempty"`
	// A Boolean indicating whether this monitor notifies when data stops reporting.
	NotifyNoData bool `json:"notify_no_data,omitempty"`
	// The number of minutes after the last notification before a monitor re-notifies on the current status. It only re-notifies if it’s not resolved.
	RenotifyInterval *int64 `json:"renotify_interval,omitempty"`
	// A Boolean indicating whether this monitor needs a full window of data before it’s evaluated. We highly recommend you set this to `false` for sparse metrics, otherwise some evaluations are skipped. For “on average” “at all times” and “in total” aggregation, default is true. `False` otherwise.
	RequireFullWindow bool `json:"require_full_window,omitempty"`
	// Information about the downtime applied to the monitor.
	Silenced map[string]int64 `json:"silenced,omitempty"`
	// ID of the corresponding Synthetic check.
	SyntheticsCheckId *int64 `json:"synthetics_check_id,omitempty"`
	ThresholdWindows MonitorThresholdWindowOptions `json:"threshold_windows,omitempty"`
	Thresholds MonitorThresholds `json:"thresholds,omitempty"`
	// The number of hours of the monitor not reporting data before it automatically resolves from a triggered state.
	TimeoutH *int64 `json:"timeout_h,omitempty"`
}
