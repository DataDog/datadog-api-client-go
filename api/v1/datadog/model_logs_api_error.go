/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// LogsApiError Error returned by the Logs API
type LogsApiError struct {
	// Code identifying the error
	Code *string `json:"code,omitempty"`
	// Additional error details
	Details *[]LogsApiError `json:"details,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// NewLogsApiError instantiates a new LogsApiError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsApiError() *LogsApiError {
	this := LogsApiError{}
	return &this
}

// NewLogsApiErrorWithDefaults instantiates a new LogsApiError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsApiErrorWithDefaults() *LogsApiError {
	this := LogsApiError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *LogsApiError) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LogsApiError) GetCodeOk() (string, bool) {
	if o == nil || o.Code == nil {
		var ret string
		return ret, false
	}
	return *o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *LogsApiError) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *LogsApiError) SetCode(v string) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *LogsApiError) GetDetails() []LogsApiError {
	if o == nil || o.Details == nil {
		var ret []LogsApiError
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LogsApiError) GetDetailsOk() ([]LogsApiError, bool) {
	if o == nil || o.Details == nil {
		var ret []LogsApiError
		return ret, false
	}
	return *o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *LogsApiError) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []LogsApiError and assigns it to the Details field.
func (o *LogsApiError) SetDetails(v []LogsApiError) {
	o.Details = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *LogsApiError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LogsApiError) GetMessageOk() (string, bool) {
	if o == nil || o.Message == nil {
		var ret string
		return ret, false
	}
	return *o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *LogsApiError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *LogsApiError) SetMessage(v string) {
	o.Message = &v
}

type NullableLogsApiError struct {
	Value        LogsApiError
	ExplicitNull bool
}

func (v NullableLogsApiError) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLogsApiError) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
