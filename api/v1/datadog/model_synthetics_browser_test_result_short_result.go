/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// SyntheticsBrowserTestResultShortResult struct for SyntheticsBrowserTestResultShortResult
type SyntheticsBrowserTestResultShortResult struct {
	Device             *SyntheticsDevice `json:"device,omitempty"`
	Duration           *float64          `json:"duration,omitempty"`
	ErrorCount         *int64            `json:"errorCount,omitempty"`
	StepCountCompleted *int64            `json:"stepCountCompleted,omitempty"`
	StepCountTotal     *int64            `json:"stepCountTotal,omitempty"`
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *SyntheticsBrowserTestResultShortResult) GetDevice() SyntheticsDevice {
	if o == nil || o.Device == nil {
		var ret SyntheticsDevice
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultShortResult) GetDeviceOk() (SyntheticsDevice, bool) {
	if o == nil || o.Device == nil {
		var ret SyntheticsDevice
		return ret, false
	}
	return *o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *SyntheticsBrowserTestResultShortResult) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given SyntheticsDevice and assigns it to the Device field.
func (o *SyntheticsBrowserTestResultShortResult) SetDevice(v SyntheticsDevice) {
	o.Device = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *SyntheticsBrowserTestResultShortResult) GetDuration() float64 {
	if o == nil || o.Duration == nil {
		var ret float64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultShortResult) GetDurationOk() (float64, bool) {
	if o == nil || o.Duration == nil {
		var ret float64
		return ret, false
	}
	return *o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *SyntheticsBrowserTestResultShortResult) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float64 and assigns it to the Duration field.
func (o *SyntheticsBrowserTestResultShortResult) SetDuration(v float64) {
	o.Duration = &v
}

// GetErrorCount returns the ErrorCount field value if set, zero value otherwise.
func (o *SyntheticsBrowserTestResultShortResult) GetErrorCount() int64 {
	if o == nil || o.ErrorCount == nil {
		var ret int64
		return ret
	}
	return *o.ErrorCount
}

// GetErrorCountOk returns a tuple with the ErrorCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultShortResult) GetErrorCountOk() (int64, bool) {
	if o == nil || o.ErrorCount == nil {
		var ret int64
		return ret, false
	}
	return *o.ErrorCount, true
}

// HasErrorCount returns a boolean if a field has been set.
func (o *SyntheticsBrowserTestResultShortResult) HasErrorCount() bool {
	if o != nil && o.ErrorCount != nil {
		return true
	}

	return false
}

// SetErrorCount gets a reference to the given int64 and assigns it to the ErrorCount field.
func (o *SyntheticsBrowserTestResultShortResult) SetErrorCount(v int64) {
	o.ErrorCount = &v
}

// GetStepCountCompleted returns the StepCountCompleted field value if set, zero value otherwise.
func (o *SyntheticsBrowserTestResultShortResult) GetStepCountCompleted() int64 {
	if o == nil || o.StepCountCompleted == nil {
		var ret int64
		return ret
	}
	return *o.StepCountCompleted
}

// GetStepCountCompletedOk returns a tuple with the StepCountCompleted field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultShortResult) GetStepCountCompletedOk() (int64, bool) {
	if o == nil || o.StepCountCompleted == nil {
		var ret int64
		return ret, false
	}
	return *o.StepCountCompleted, true
}

// HasStepCountCompleted returns a boolean if a field has been set.
func (o *SyntheticsBrowserTestResultShortResult) HasStepCountCompleted() bool {
	if o != nil && o.StepCountCompleted != nil {
		return true
	}

	return false
}

// SetStepCountCompleted gets a reference to the given int64 and assigns it to the StepCountCompleted field.
func (o *SyntheticsBrowserTestResultShortResult) SetStepCountCompleted(v int64) {
	o.StepCountCompleted = &v
}

// GetStepCountTotal returns the StepCountTotal field value if set, zero value otherwise.
func (o *SyntheticsBrowserTestResultShortResult) GetStepCountTotal() int64 {
	if o == nil || o.StepCountTotal == nil {
		var ret int64
		return ret
	}
	return *o.StepCountTotal
}

// GetStepCountTotalOk returns a tuple with the StepCountTotal field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsBrowserTestResultShortResult) GetStepCountTotalOk() (int64, bool) {
	if o == nil || o.StepCountTotal == nil {
		var ret int64
		return ret, false
	}
	return *o.StepCountTotal, true
}

// HasStepCountTotal returns a boolean if a field has been set.
func (o *SyntheticsBrowserTestResultShortResult) HasStepCountTotal() bool {
	if o != nil && o.StepCountTotal != nil {
		return true
	}

	return false
}

// SetStepCountTotal gets a reference to the given int64 and assigns it to the StepCountTotal field.
func (o *SyntheticsBrowserTestResultShortResult) SetStepCountTotal(v int64) {
	o.StepCountTotal = &v
}

type NullableSyntheticsBrowserTestResultShortResult struct {
	Value        SyntheticsBrowserTestResultShortResult
	ExplicitNull bool
}

func (v NullableSyntheticsBrowserTestResultShortResult) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsBrowserTestResultShortResult) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
