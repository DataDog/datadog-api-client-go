/*
 * Datadog API Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * API version: 1.0
 * Contact: support@datadoghq.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog
// WidgetDefinition [Definition of the widget](https://docs.datadoghq.com/dashboards/widgets/).
type WidgetDefinition struct {
	// ID of the alert to use in the widget.
	AlertId string `json:"alert_id"`
	Time WidgetTime `json:"time,omitempty"`
	// Title of your widget.
	Title string `json:"title,omitempty"`
	TitleAlign WidgetTextAlign `json:"title_align,omitempty"`
	// Size of the title.
	TitleSize string `json:"title_size,omitempty"`
	Type ToplistWidgetDefinitionType `json:"type"`
	VizType WidgetVizType `json:"viz_type"`
	// Number of decimals to show. If not defined, the widget uses the raw value.
	Precision int64 `json:"precision,omitempty"`
	TextAlign WidgetTextAlign `json:"text_align,omitempty"`
	// Unit to display with the value.
	Unit string `json:"unit,omitempty"`
	// List of top list widget requests.
	Requests []ToplistWidgetRequest `json:"requests"`
	// Name of the check to use in the widget.
	Check string `json:"check"`
	// List of tag prefixes to group by.
	Group []string `json:"group,omitempty"`
	// List of tag prefixes to group by in the case of a cluster check.
	GroupBy []string `json:"group_by,omitempty"`
	Grouping WidgetGrouping `json:"grouping"`
	// List of tags used to filter the groups reporting a cluster check.
	Tags []string `json:"tags,omitempty"`
	LegendSize WidgetLegendSize `json:"legend_size,omitempty"`
	// (screenboard only) Show the legend for this widget.
	ShowLegend bool `json:"show_legend,omitempty"`
	EventSize WidgetEventSize `json:"event_size,omitempty"`
	// Query to filter the monitors with.
	Query string `json:"query"`
	// The execution method for multi-value filters. Can be either and or or.
	TagsExecution string `json:"tags_execution,omitempty"`
	// Color of the text.
	Color string `json:"color,omitempty"`
	// Size of the text.
	FontSize string `json:"font_size,omitempty"`
	// Text to display.
	Text string `json:"text"`
	LayoutType WidgetLayoutType `json:"layout_type"`
	// List of widget groups.
	Widgets []Widget `json:"widgets"`
	// List of widget events.
	Events []WidgetEvent `json:"events,omitempty"`
	Yaxis WidgetAxis `json:"yaxis,omitempty"`
	// Whether to show the hosts that donâ€™t fit in a group.
	NoGroupHosts bool `json:"no_group_hosts,omitempty"`
	// Whether to show the hosts with no metrics.
	NoMetricHosts bool `json:"no_metric_hosts,omitempty"`
	NodeType WidgetNodeType `json:"node_type,omitempty"`
	// Notes on the title.
	Notes string `json:"notes,omitempty"`
	// List of tags used to filter the map.
	Scope []string `json:"scope,omitempty"`
	Style HostMapWidgetDefinitionStyle `json:"style,omitempty"`
	// URL of the image.
	Url string `json:"url"`
	Margin WidgetMargin `json:"margin,omitempty"`
	Sizing WidgetImageSizing `json:"sizing,omitempty"`
	// Which columns to display on the widget.
	Columns []string `json:"columns,omitempty"`
	// An array of index names to query in the stream. Use [] to query all indexes at once.
	Indexes []string `json:"indexes,omitempty"`
	// ID of the log set to use.
	Logset string `json:"logset,omitempty"`
	MessageDisplay WidgetMessageDisplay `json:"message_display,omitempty"`
	// Whether to show the date column or not
	ShowDateColumn bool `json:"show_date_column,omitempty"`
	// Whether to show the message column or not
	ShowMessageColumn bool `json:"show_message_column,omitempty"`
	Sort WidgetMonitorSummarySort `json:"sort,omitempty"`
	ColorPreference WidgetColorPreference `json:"color_preference,omitempty"`
	// The number of monitors to display.
	Count int64 `json:"count,omitempty"`
	DisplayFormat WidgetServiceSummaryDisplayFormat `json:"display_format,omitempty"`
	// Whether to show counts of 0 or not.
	HideZeroCounts bool `json:"hide_zero_counts,omitempty"`
	// Whether to show the time that has elapsed since the monitor/group triggered.
	ShowLastTriggered bool `json:"show_last_triggered,omitempty"`
	// The start of the list. Typically 0.
	Start int64 `json:"start,omitempty"`
	SummaryType WidgetSummaryType `json:"summary_type,omitempty"`
	// Background color of the note.
	BackgroundColor string `json:"background_color,omitempty"`
	// Content of the note.
	Content string `json:"content"`
	// Whether to show a tick or not.
	ShowTick bool `json:"show_tick,omitempty"`
	TickEdge WidgetTickEdge `json:"tick_edge,omitempty"`
	// Where to position the tick on an edge.
	TickPos string `json:"tick_pos,omitempty"`
	// Whether to use auto-scaling or not.
	Autoscale bool `json:"autoscale,omitempty"`
	// Display a unit of your choice on the widget.
	CustomUnit string `json:"custom_unit,omitempty"`
	// List of groups used for colors.
	ColorByGroups []string `json:"color_by_groups,omitempty"`
	Xaxis WidgetAxis `json:"xaxis,omitempty"`
	// Defined error budget.
	ShowErrorBudget bool `json:"show_error_budget,omitempty"`
	// ID of the SLO displayed.
	SloId string `json:"slo_id,omitempty"`
	// Times being monitored.
	TimeWindows []WidgetTimeWindows `json:"time_windows,omitempty"`
	ViewMode WidgetViewMode `json:"view_mode,omitempty"`
	// Type of view displayed by the widget.
	ViewType string `json:"view_type"`
	// Your environment and primary tag (or * if enabled for your account).
	Filters []string `json:"filters"`
	// APM service.
	Service string `json:"service"`
	// APM environment.
	Env string `json:"env"`
	// Whether to show the latency breakdown or not.
	ShowBreakdown bool `json:"show_breakdown,omitempty"`
	// Whether to show the latency distribution or not.
	ShowDistribution bool `json:"show_distribution,omitempty"`
	// Whether to show the error metrics or not.
	ShowErrors bool `json:"show_errors,omitempty"`
	// Whether to show the hits metrics or not.
	ShowHits bool `json:"show_hits,omitempty"`
	// Whether to show the latency metrics or not.
	ShowLatency bool `json:"show_latency,omitempty"`
	// Whether to show the resource list or not.
	ShowResourceList bool `json:"show_resource_list,omitempty"`
	SizeFormat WidgetSizeFormat `json:"size_format,omitempty"`
	// APM span name.
	SpanName string `json:"span_name"`
	// List of markers.
	Markers []WidgetMarker `json:"markers,omitempty"`
}
