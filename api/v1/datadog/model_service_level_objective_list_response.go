/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// ServiceLevelObjectiveListResponse struct for ServiceLevelObjectiveListResponse
type ServiceLevelObjectiveListResponse struct {
	// An array of service level objective objects.
	Data []ServiceLevelObjective `json:"data"`
	// An array of error messages. Each endpoint documents how/whether this field is used.
	Errors *[]string `json:"errors,omitempty"`
}

// GetData returns the Data field value
func (o *ServiceLevelObjectiveListResponse) GetData() []ServiceLevelObjective {
	if o == nil {
		var ret []ServiceLevelObjective
		return ret
	}

	return o.Data
}

// SetData sets field value
func (o *ServiceLevelObjectiveListResponse) SetData(v []ServiceLevelObjective) {
	o.Data = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ServiceLevelObjectiveListResponse) GetErrors() []string {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLevelObjectiveListResponse) GetErrorsOk() ([]string, bool) {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret, false
	}
	return *o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ServiceLevelObjectiveListResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ServiceLevelObjectiveListResponse) SetErrors(v []string) {
	o.Errors = &v
}

type NullableServiceLevelObjectiveListResponse struct {
	Value        ServiceLevelObjectiveListResponse
	ExplicitNull bool
}

func (v NullableServiceLevelObjectiveListResponse) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableServiceLevelObjectiveListResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
