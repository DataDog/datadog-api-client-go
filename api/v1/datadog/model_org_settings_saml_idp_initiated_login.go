/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// OrgSettingsSamlIdpInitiatedLogin Has one property enabled (boolean).
type OrgSettingsSamlIdpInitiatedLogin struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// NewOrgSettingsSamlIdpInitiatedLogin instantiates a new OrgSettingsSamlIdpInitiatedLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgSettingsSamlIdpInitiatedLogin() *OrgSettingsSamlIdpInitiatedLogin {
	this := OrgSettingsSamlIdpInitiatedLogin{}
	return &this
}

// NewOrgSettingsSamlIdpInitiatedLoginWithDefaults instantiates a new OrgSettingsSamlIdpInitiatedLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgSettingsSamlIdpInitiatedLoginWithDefaults() *OrgSettingsSamlIdpInitiatedLogin {
	this := OrgSettingsSamlIdpInitiatedLogin{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OrgSettingsSamlIdpInitiatedLogin) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSettingsSamlIdpInitiatedLogin) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OrgSettingsSamlIdpInitiatedLogin) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OrgSettingsSamlIdpInitiatedLogin) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o OrgSettingsSamlIdpInitiatedLogin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableOrgSettingsSamlIdpInitiatedLogin struct {
	value *OrgSettingsSamlIdpInitiatedLogin
	isSet bool
}

func (v NullableOrgSettingsSamlIdpInitiatedLogin) Get() *OrgSettingsSamlIdpInitiatedLogin {
	return v.value
}

func (v *NullableOrgSettingsSamlIdpInitiatedLogin) Set(val *OrgSettingsSamlIdpInitiatedLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgSettingsSamlIdpInitiatedLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgSettingsSamlIdpInitiatedLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgSettingsSamlIdpInitiatedLogin(val *OrgSettingsSamlIdpInitiatedLogin) *NullableOrgSettingsSamlIdpInitiatedLogin {
	return &NullableOrgSettingsSamlIdpInitiatedLogin{value: val, isSet: true}
}

func (v NullableOrgSettingsSamlIdpInitiatedLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgSettingsSamlIdpInitiatedLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
