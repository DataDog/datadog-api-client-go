/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// GraphSnapshot struct for GraphSnapshot
type GraphSnapshot struct {
	GraphDef    *string `json:"graph_def,omitempty"`
	MetricQuery *string `json:"metric_query,omitempty"`
	SnapshotUrl *string `json:"snapshot_url,omitempty"`
}

// GetGraphDef returns the GraphDef field value if set, zero value otherwise.
func (o *GraphSnapshot) GetGraphDef() string {
	if o == nil || o.GraphDef == nil {
		var ret string
		return ret
	}
	return *o.GraphDef
}

// GetGraphDefOk returns a tuple with the GraphDef field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GraphSnapshot) GetGraphDefOk() (string, bool) {
	if o == nil || o.GraphDef == nil {
		var ret string
		return ret, false
	}
	return *o.GraphDef, true
}

// HasGraphDef returns a boolean if a field has been set.
func (o *GraphSnapshot) HasGraphDef() bool {
	if o != nil && o.GraphDef != nil {
		return true
	}

	return false
}

// SetGraphDef gets a reference to the given string and assigns it to the GraphDef field.
func (o *GraphSnapshot) SetGraphDef(v string) {
	o.GraphDef = &v
}

// GetMetricQuery returns the MetricQuery field value if set, zero value otherwise.
func (o *GraphSnapshot) GetMetricQuery() string {
	if o == nil || o.MetricQuery == nil {
		var ret string
		return ret
	}
	return *o.MetricQuery
}

// GetMetricQueryOk returns a tuple with the MetricQuery field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GraphSnapshot) GetMetricQueryOk() (string, bool) {
	if o == nil || o.MetricQuery == nil {
		var ret string
		return ret, false
	}
	return *o.MetricQuery, true
}

// HasMetricQuery returns a boolean if a field has been set.
func (o *GraphSnapshot) HasMetricQuery() bool {
	if o != nil && o.MetricQuery != nil {
		return true
	}

	return false
}

// SetMetricQuery gets a reference to the given string and assigns it to the MetricQuery field.
func (o *GraphSnapshot) SetMetricQuery(v string) {
	o.MetricQuery = &v
}

// GetSnapshotUrl returns the SnapshotUrl field value if set, zero value otherwise.
func (o *GraphSnapshot) GetSnapshotUrl() string {
	if o == nil || o.SnapshotUrl == nil {
		var ret string
		return ret
	}
	return *o.SnapshotUrl
}

// GetSnapshotUrlOk returns a tuple with the SnapshotUrl field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GraphSnapshot) GetSnapshotUrlOk() (string, bool) {
	if o == nil || o.SnapshotUrl == nil {
		var ret string
		return ret, false
	}
	return *o.SnapshotUrl, true
}

// HasSnapshotUrl returns a boolean if a field has been set.
func (o *GraphSnapshot) HasSnapshotUrl() bool {
	if o != nil && o.SnapshotUrl != nil {
		return true
	}

	return false
}

// SetSnapshotUrl gets a reference to the given string and assigns it to the SnapshotUrl field.
func (o *GraphSnapshot) SetSnapshotUrl(v string) {
	o.SnapshotUrl = &v
}

type NullableGraphSnapshot struct {
	Value        GraphSnapshot
	ExplicitNull bool
}

func (v NullableGraphSnapshot) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableGraphSnapshot) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
