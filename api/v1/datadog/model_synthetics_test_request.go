/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// SyntheticsTestRequest struct for SyntheticsTestRequest
type SyntheticsTestRequest struct {
	BasicAuth *SyntheticsTestRequestBasicAuth `json:"basicAuth,omitempty"`
	Body      *string                         `json:"body,omitempty"`
	Headers   *map[string]string              `json:"headers,omitempty"`
	Host      *string                         `json:"host,omitempty"`
	Method    HttpMethod                      `json:"method"`
	Port      *int64                          `json:"port,omitempty"`
	Query     *interface{}                    `json:"query,omitempty"`
	Timeout   *float64                        `json:"timeout,omitempty"`
	Url       string                          `json:"url"`
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetBasicAuth() SyntheticsTestRequestBasicAuth {
	if o == nil || o.BasicAuth == nil {
		var ret SyntheticsTestRequestBasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetBasicAuthOk() (SyntheticsTestRequestBasicAuth, bool) {
	if o == nil || o.BasicAuth == nil {
		var ret SyntheticsTestRequestBasicAuth
		return ret, false
	}
	return *o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasBasicAuth() bool {
	if o != nil && o.BasicAuth != nil {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given SyntheticsTestRequestBasicAuth and assigns it to the BasicAuth field.
func (o *SyntheticsTestRequest) SetBasicAuth(v SyntheticsTestRequestBasicAuth) {
	o.BasicAuth = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetBodyOk() (string, bool) {
	if o == nil || o.Body == nil {
		var ret string
		return ret, false
	}
	return *o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *SyntheticsTestRequest) SetBody(v string) {
	o.Body = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetHeaders() map[string]string {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetHeadersOk() (map[string]string, bool) {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *SyntheticsTestRequest) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetHostOk() (string, bool) {
	if o == nil || o.Host == nil {
		var ret string
		return ret, false
	}
	return *o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *SyntheticsTestRequest) SetHost(v string) {
	o.Host = &v
}

// GetMethod returns the Method field value
func (o *SyntheticsTestRequest) GetMethod() HttpMethod {
	if o == nil {
		var ret HttpMethod
		return ret
	}

	return o.Method
}

// SetMethod sets field value
func (o *SyntheticsTestRequest) SetMethod(v HttpMethod) {
	o.Method = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetPortOk() (int64, bool) {
	if o == nil || o.Port == nil {
		var ret int64
		return ret, false
	}
	return *o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *SyntheticsTestRequest) SetPort(v int64) {
	o.Port = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetQuery() interface{} {
	if o == nil || o.Query == nil {
		var ret interface{}
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetQueryOk() (interface{}, bool) {
	if o == nil || o.Query == nil {
		var ret interface{}
		return ret, false
	}
	return *o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given interface{} and assigns it to the Query field.
func (o *SyntheticsTestRequest) SetQuery(v interface{}) {
	o.Query = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SyntheticsTestRequest) GetTimeout() float64 {
	if o == nil || o.Timeout == nil {
		var ret float64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsTestRequest) GetTimeoutOk() (float64, bool) {
	if o == nil || o.Timeout == nil {
		var ret float64
		return ret, false
	}
	return *o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SyntheticsTestRequest) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given float64 and assigns it to the Timeout field.
func (o *SyntheticsTestRequest) SetTimeout(v float64) {
	o.Timeout = &v
}

// GetUrl returns the Url field value
func (o *SyntheticsTestRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// SetUrl sets field value
func (o *SyntheticsTestRequest) SetUrl(v string) {
	o.Url = v
}

type NullableSyntheticsTestRequest struct {
	Value        SyntheticsTestRequest
	ExplicitNull bool
}

func (v NullableSyntheticsTestRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsTestRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
