/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SyntheticsAPITestConfig Configuration object for a Synthetic API test.
type SyntheticsAPITestConfig struct {
	// Array of assertions used for the test.
	Assertions []SyntheticsAssertion `json:"assertions"`
	// Array of variables used for the test.
	ConfigVariables *[]SyntheticsConfigVariable `json:"configVariables,omitempty"`
	Request         SyntheticsTestRequest       `json:"request"`
}

// NewSyntheticsAPITestConfig instantiates a new SyntheticsAPITestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticsAPITestConfig(assertions []SyntheticsAssertion, request SyntheticsTestRequest) *SyntheticsAPITestConfig {
	this := SyntheticsAPITestConfig{}
	this.Assertions = assertions
	this.Request = request
	return &this
}

// NewSyntheticsAPITestConfigWithDefaults instantiates a new SyntheticsAPITestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticsAPITestConfigWithDefaults() *SyntheticsAPITestConfig {
	this := SyntheticsAPITestConfig{}
	return &this
}

// GetAssertions returns the Assertions field value
func (o *SyntheticsAPITestConfig) GetAssertions() []SyntheticsAssertion {
	if o == nil {
		var ret []SyntheticsAssertion
		return ret
	}

	return o.Assertions
}

// GetAssertionsOk returns a tuple with the Assertions field value
// and a boolean to check if the value has been set.
func (o *SyntheticsAPITestConfig) GetAssertionsOk() (*[]SyntheticsAssertion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assertions, true
}

// SetAssertions sets field value
func (o *SyntheticsAPITestConfig) SetAssertions(v []SyntheticsAssertion) {
	o.Assertions = v
}

// GetConfigVariables returns the ConfigVariables field value if set, zero value otherwise.
func (o *SyntheticsAPITestConfig) GetConfigVariables() []SyntheticsConfigVariable {
	if o == nil || o.ConfigVariables == nil {
		var ret []SyntheticsConfigVariable
		return ret
	}
	return *o.ConfigVariables
}

// GetConfigVariablesOk returns a tuple with the ConfigVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsAPITestConfig) GetConfigVariablesOk() (*[]SyntheticsConfigVariable, bool) {
	if o == nil || o.ConfigVariables == nil {
		return nil, false
	}
	return o.ConfigVariables, true
}

// HasConfigVariables returns a boolean if a field has been set.
func (o *SyntheticsAPITestConfig) HasConfigVariables() bool {
	if o != nil && o.ConfigVariables != nil {
		return true
	}

	return false
}

// SetConfigVariables gets a reference to the given []SyntheticsConfigVariable and assigns it to the ConfigVariables field.
func (o *SyntheticsAPITestConfig) SetConfigVariables(v []SyntheticsConfigVariable) {
	o.ConfigVariables = &v
}

// GetRequest returns the Request field value
func (o *SyntheticsAPITestConfig) GetRequest() SyntheticsTestRequest {
	if o == nil {
		var ret SyntheticsTestRequest
		return ret
	}

	return o.Request
}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
func (o *SyntheticsAPITestConfig) GetRequestOk() (*SyntheticsTestRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Request, true
}

// SetRequest sets field value
func (o *SyntheticsAPITestConfig) SetRequest(v SyntheticsTestRequest) {
	o.Request = v
}

func (o SyntheticsAPITestConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assertions"] = o.Assertions
	}
	if o.ConfigVariables != nil {
		toSerialize["configVariables"] = o.ConfigVariables
	}
	if true {
		toSerialize["request"] = o.Request
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticsAPITestConfig struct {
	value *SyntheticsAPITestConfig
	isSet bool
}

func (v NullableSyntheticsAPITestConfig) Get() *SyntheticsAPITestConfig {
	return v.value
}

func (v *NullableSyntheticsAPITestConfig) Set(val *SyntheticsAPITestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticsAPITestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticsAPITestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticsAPITestConfig(val *SyntheticsAPITestConfig) *NullableSyntheticsAPITestConfig {
	return &NullableSyntheticsAPITestConfig{value: val, isSet: true}
}

func (v NullableSyntheticsAPITestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticsAPITestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
