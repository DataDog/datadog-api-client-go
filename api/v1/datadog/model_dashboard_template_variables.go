/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// DashboardTemplateVariables struct for DashboardTemplateVariables
type DashboardTemplateVariables struct {
	Default NullableString `json:"default,omitempty"`
	Name    string         `json:"name"`
	Prefix  NullableString `json:"prefix,omitempty"`
}

// NewDashboardTemplateVariables instantiates a new DashboardTemplateVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardTemplateVariables(name string) *DashboardTemplateVariables {
	this := DashboardTemplateVariables{}
	this.Name = name
	return &this
}

// NewDashboardTemplateVariablesWithDefaults instantiates a new DashboardTemplateVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardTemplateVariablesWithDefaults() *DashboardTemplateVariables {
	this := DashboardTemplateVariables{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *DashboardTemplateVariables) GetDefault() NullableString {
	if o == nil {
		var ret NullableString
		return ret
	}
	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DashboardTemplateVariables) GetDefaultOk() (NullableString, bool) {
	if o == nil {
		var ret NullableString
		return ret, false
	}
	return o.Default, o.Default.IsSet()
}

// HasDefault returns a boolean if a field has been set.
func (o *DashboardTemplateVariables) HasDefault() bool {
	if o != nil && o.Default.IsSet() {
		return true
	}

	return false
}

// SetDefault gets a reference to the given NullableString and assigns it to the Default field.
func (o *DashboardTemplateVariables) SetDefault(v NullableString) {
	o.Default = v
}

// GetName returns the Name field value
func (o *DashboardTemplateVariables) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *DashboardTemplateVariables) SetName(v string) {
	o.Name = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *DashboardTemplateVariables) GetPrefix() NullableString {
	if o == nil {
		var ret NullableString
		return ret
	}
	return o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DashboardTemplateVariables) GetPrefixOk() (NullableString, bool) {
	if o == nil {
		var ret NullableString
		return ret, false
	}
	return o.Prefix, o.Prefix.IsSet()
}

// HasPrefix returns a boolean if a field has been set.
func (o *DashboardTemplateVariables) HasPrefix() bool {
	if o != nil && o.Prefix.IsSet() {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given NullableString and assigns it to the Prefix field.
func (o *DashboardTemplateVariables) SetPrefix(v NullableString) {
	o.Prefix = v
}

func (o DashboardTemplateVariables) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default.IsSet() {
		toSerialize["default"] = o.Default.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Prefix.IsSet() {
		toSerialize["prefix"] = o.Prefix.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardTemplateVariables struct {
	value *DashboardTemplateVariables
	isSet bool
}

func (v NullableDashboardTemplateVariables) Get() *DashboardTemplateVariables {
	return v.value
}

func (v NullableDashboardTemplateVariables) Set(val *DashboardTemplateVariables) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardTemplateVariables) IsSet() bool {
	return v.isSet
}

func (v NullableDashboardTemplateVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardTemplateVariables(val *DashboardTemplateVariables) *NullableDashboardTemplateVariables {
	return &NullableDashboardTemplateVariables{value: val, isSet: true}
}

func (v NullableDashboardTemplateVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardTemplateVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
