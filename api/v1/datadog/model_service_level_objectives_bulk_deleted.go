/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// ServiceLevelObjectivesBulkDeleted The bulk partial delete service level objective object endpoint response. This endpoint operates on multiple service level objective objects, so it may be partially successful. In such cases, the \"data\" and \"error\" fields in this response indicate which deletions succeeded and failed.
type ServiceLevelObjectivesBulkDeleted struct {
	Data   ServiceLevelObjectivesBulkDeletedData     `json:"data"`
	Errors []ServiceLevelObjectivesBulkDeletedErrors `json:"errors"`
}

// GetData returns the Data field value
func (o *ServiceLevelObjectivesBulkDeleted) GetData() ServiceLevelObjectivesBulkDeletedData {
	if o == nil {
		var ret ServiceLevelObjectivesBulkDeletedData
		return ret
	}

	return o.Data
}

// SetData sets field value
func (o *ServiceLevelObjectivesBulkDeleted) SetData(v ServiceLevelObjectivesBulkDeletedData) {
	o.Data = v
}

// GetErrors returns the Errors field value
func (o *ServiceLevelObjectivesBulkDeleted) GetErrors() []ServiceLevelObjectivesBulkDeletedErrors {
	if o == nil {
		var ret []ServiceLevelObjectivesBulkDeletedErrors
		return ret
	}

	return o.Errors
}

// SetErrors sets field value
func (o *ServiceLevelObjectivesBulkDeleted) SetErrors(v []ServiceLevelObjectivesBulkDeletedErrors) {
	o.Errors = v
}

type NullableServiceLevelObjectivesBulkDeleted struct {
	Value        ServiceLevelObjectivesBulkDeleted
	ExplicitNull bool
}

func (v NullableServiceLevelObjectivesBulkDeleted) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableServiceLevelObjectivesBulkDeleted) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
