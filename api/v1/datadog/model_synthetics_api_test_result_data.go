/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// SyntheticsApiTestResultData struct for SyntheticsApiTestResultData
type SyntheticsApiTestResultData struct {
	Cert            *SyntheticsSslCertificate    `json:"cert,omitempty"`
	ErrorCode       *SyntheticsErrorCode         `json:"errorCode,omitempty"`
	ErrorMessage    *string                      `json:"errorMessage,omitempty"`
	EventType       *SyntheticsTestProcessStatus `json:"eventType,omitempty"`
	HttpStatusCode  *int64                       `json:"httpStatusCode,omitempty"`
	RequestHeaders  *map[string]interface{}      `json:"requestHeaders,omitempty"`
	ResponseBody    *string                      `json:"responseBody,omitempty"`
	ResponseHeaders *map[string]interface{}      `json:"responseHeaders,omitempty"`
	ResponseSize    *int64                       `json:"responseSize,omitempty"`
	Timings         *SyntheticsTiming            `json:"timings,omitempty"`
}

// GetCert returns the Cert field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetCert() SyntheticsSslCertificate {
	if o == nil || o.Cert == nil {
		var ret SyntheticsSslCertificate
		return ret
	}
	return *o.Cert
}

// GetCertOk returns a tuple with the Cert field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetCertOk() (SyntheticsSslCertificate, bool) {
	if o == nil || o.Cert == nil {
		var ret SyntheticsSslCertificate
		return ret, false
	}
	return *o.Cert, true
}

// HasCert returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasCert() bool {
	if o != nil && o.Cert != nil {
		return true
	}

	return false
}

// SetCert gets a reference to the given SyntheticsSslCertificate and assigns it to the Cert field.
func (o *SyntheticsApiTestResultData) SetCert(v SyntheticsSslCertificate) {
	o.Cert = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetErrorCode() SyntheticsErrorCode {
	if o == nil || o.ErrorCode == nil {
		var ret SyntheticsErrorCode
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetErrorCodeOk() (SyntheticsErrorCode, bool) {
	if o == nil || o.ErrorCode == nil {
		var ret SyntheticsErrorCode
		return ret, false
	}
	return *o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given SyntheticsErrorCode and assigns it to the ErrorCode field.
func (o *SyntheticsApiTestResultData) SetErrorCode(v SyntheticsErrorCode) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetErrorMessageOk() (string, bool) {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret, false
	}
	return *o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *SyntheticsApiTestResultData) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetEventType() SyntheticsTestProcessStatus {
	if o == nil || o.EventType == nil {
		var ret SyntheticsTestProcessStatus
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetEventTypeOk() (SyntheticsTestProcessStatus, bool) {
	if o == nil || o.EventType == nil {
		var ret SyntheticsTestProcessStatus
		return ret, false
	}
	return *o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given SyntheticsTestProcessStatus and assigns it to the EventType field.
func (o *SyntheticsApiTestResultData) SetEventType(v SyntheticsTestProcessStatus) {
	o.EventType = &v
}

// GetHttpStatusCode returns the HttpStatusCode field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetHttpStatusCode() int64 {
	if o == nil || o.HttpStatusCode == nil {
		var ret int64
		return ret
	}
	return *o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetHttpStatusCodeOk() (int64, bool) {
	if o == nil || o.HttpStatusCode == nil {
		var ret int64
		return ret, false
	}
	return *o.HttpStatusCode, true
}

// HasHttpStatusCode returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasHttpStatusCode() bool {
	if o != nil && o.HttpStatusCode != nil {
		return true
	}

	return false
}

// SetHttpStatusCode gets a reference to the given int64 and assigns it to the HttpStatusCode field.
func (o *SyntheticsApiTestResultData) SetHttpStatusCode(v int64) {
	o.HttpStatusCode = &v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetRequestHeaders() map[string]interface{} {
	if o == nil || o.RequestHeaders == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetRequestHeadersOk() (map[string]interface{}, bool) {
	if o == nil || o.RequestHeaders == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders != nil {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given map[string]interface{} and assigns it to the RequestHeaders field.
func (o *SyntheticsApiTestResultData) SetRequestHeaders(v map[string]interface{}) {
	o.RequestHeaders = &v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetResponseBody() string {
	if o == nil || o.ResponseBody == nil {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetResponseBodyOk() (string, bool) {
	if o == nil || o.ResponseBody == nil {
		var ret string
		return ret, false
	}
	return *o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasResponseBody() bool {
	if o != nil && o.ResponseBody != nil {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *SyntheticsApiTestResultData) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetResponseHeaders() map[string]interface{} {
	if o == nil || o.ResponseHeaders == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetResponseHeadersOk() (map[string]interface{}, bool) {
	if o == nil || o.ResponseHeaders == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.ResponseHeaders, true
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasResponseHeaders() bool {
	if o != nil && o.ResponseHeaders != nil {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given map[string]interface{} and assigns it to the ResponseHeaders field.
func (o *SyntheticsApiTestResultData) SetResponseHeaders(v map[string]interface{}) {
	o.ResponseHeaders = &v
}

// GetResponseSize returns the ResponseSize field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetResponseSize() int64 {
	if o == nil || o.ResponseSize == nil {
		var ret int64
		return ret
	}
	return *o.ResponseSize
}

// GetResponseSizeOk returns a tuple with the ResponseSize field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetResponseSizeOk() (int64, bool) {
	if o == nil || o.ResponseSize == nil {
		var ret int64
		return ret, false
	}
	return *o.ResponseSize, true
}

// HasResponseSize returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasResponseSize() bool {
	if o != nil && o.ResponseSize != nil {
		return true
	}

	return false
}

// SetResponseSize gets a reference to the given int64 and assigns it to the ResponseSize field.
func (o *SyntheticsApiTestResultData) SetResponseSize(v int64) {
	o.ResponseSize = &v
}

// GetTimings returns the Timings field value if set, zero value otherwise.
func (o *SyntheticsApiTestResultData) GetTimings() SyntheticsTiming {
	if o == nil || o.Timings == nil {
		var ret SyntheticsTiming
		return ret
	}
	return *o.Timings
}

// GetTimingsOk returns a tuple with the Timings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsApiTestResultData) GetTimingsOk() (SyntheticsTiming, bool) {
	if o == nil || o.Timings == nil {
		var ret SyntheticsTiming
		return ret, false
	}
	return *o.Timings, true
}

// HasTimings returns a boolean if a field has been set.
func (o *SyntheticsApiTestResultData) HasTimings() bool {
	if o != nil && o.Timings != nil {
		return true
	}

	return false
}

// SetTimings gets a reference to the given SyntheticsTiming and assigns it to the Timings field.
func (o *SyntheticsApiTestResultData) SetTimings(v SyntheticsTiming) {
	o.Timings = &v
}

type NullableSyntheticsApiTestResultData struct {
	Value        SyntheticsApiTestResultData
	ExplicitNull bool
}

func (v NullableSyntheticsApiTestResultData) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsApiTestResultData) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
