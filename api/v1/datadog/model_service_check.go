/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ServiceCheck struct for ServiceCheck
type ServiceCheck struct {
	Check     string             `json:"check"`
	HostName  *string            `json:"host_name,omitempty"`
	Message   *string            `json:"message,omitempty"`
	Status    ServiceCheckStatus `json:"status"`
	Tags      *[]string          `json:"tags,omitempty"`
	Timestamp *int64             `json:"timestamp,omitempty"`
}

// NewServiceCheck instantiates a new ServiceCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCheck(check string, status ServiceCheckStatus) *ServiceCheck {
	this := ServiceCheck{}
	this.Check = check
	this.Status = status
	return &this
}

// NewServiceCheckWithDefaults instantiates a new ServiceCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCheckWithDefaults() *ServiceCheck {
	this := ServiceCheck{}
	return &this
}

// GetCheck returns the Check field value
func (o *ServiceCheck) GetCheck() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Check
}

// GetCheckOk returns a tuple with the Check field value
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetCheckOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Check, true
}

// SetCheck sets field value
func (o *ServiceCheck) SetCheck(v string) {
	o.Check = v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ServiceCheck) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ServiceCheck) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ServiceCheck) SetHostName(v string) {
	o.HostName = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ServiceCheck) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ServiceCheck) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ServiceCheck) SetMessage(v string) {
	o.Message = &v
}

// GetStatus returns the Status field value
func (o *ServiceCheck) GetStatus() ServiceCheckStatus {
	if o == nil {
		var ret ServiceCheckStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetStatusOk() (*ServiceCheckStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ServiceCheck) SetStatus(v ServiceCheckStatus) {
	o.Status = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceCheck) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceCheck) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServiceCheck) SetTags(v []string) {
	o.Tags = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ServiceCheck) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCheck) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ServiceCheck) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *ServiceCheck) SetTimestamp(v int64) {
	o.Timestamp = &v
}

func (o ServiceCheck) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["check"] = o.Check
	}
	if o.HostName != nil {
		toSerialize["host_name"] = o.HostName
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableServiceCheck struct {
	value *ServiceCheck
	isSet bool
}

func (v NullableServiceCheck) Get() *ServiceCheck {
	return v.value
}

func (v *NullableServiceCheck) Set(val *ServiceCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCheck(val *ServiceCheck) *NullableServiceCheck {
	return &NullableServiceCheck{value: val, isSet: true}
}

func (v NullableServiceCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
