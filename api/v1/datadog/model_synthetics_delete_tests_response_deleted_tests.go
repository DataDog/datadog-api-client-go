/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
	"time"
)

// SyntheticsDeleteTestsResponseDeletedTests struct for SyntheticsDeleteTestsResponseDeletedTests
type SyntheticsDeleteTestsResponseDeletedTests struct {
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	PublicId  *string    `json:"public_id,omitempty"`
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *SyntheticsDeleteTestsResponseDeletedTests) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsDeleteTestsResponseDeletedTests) GetDeletedAtOk() (time.Time, bool) {
	if o == nil || o.DeletedAt == nil {
		var ret time.Time
		return ret, false
	}
	return *o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *SyntheticsDeleteTestsResponseDeletedTests) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *SyntheticsDeleteTestsResponseDeletedTests) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetPublicId returns the PublicId field value if set, zero value otherwise.
func (o *SyntheticsDeleteTestsResponseDeletedTests) GetPublicId() string {
	if o == nil || o.PublicId == nil {
		var ret string
		return ret
	}
	return *o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsDeleteTestsResponseDeletedTests) GetPublicIdOk() (string, bool) {
	if o == nil || o.PublicId == nil {
		var ret string
		return ret, false
	}
	return *o.PublicId, true
}

// HasPublicId returns a boolean if a field has been set.
func (o *SyntheticsDeleteTestsResponseDeletedTests) HasPublicId() bool {
	if o != nil && o.PublicId != nil {
		return true
	}

	return false
}

// SetPublicId gets a reference to the given string and assigns it to the PublicId field.
func (o *SyntheticsDeleteTestsResponseDeletedTests) SetPublicId(v string) {
	o.PublicId = &v
}

type NullableSyntheticsDeleteTestsResponseDeletedTests struct {
	Value        SyntheticsDeleteTestsResponseDeletedTests
	ExplicitNull bool
}

func (v NullableSyntheticsDeleteTestsResponseDeletedTests) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsDeleteTestsResponseDeletedTests) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
