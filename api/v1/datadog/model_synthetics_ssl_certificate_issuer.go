/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"bytes"
	"encoding/json"
)

// SyntheticsSslCertificateIssuer struct for SyntheticsSslCertificateIssuer
type SyntheticsSslCertificateIssuer struct {
	C  *string `json:"C,omitempty"`
	CN *string `json:"CN,omitempty"`
	L  *string `json:"L,omitempty"`
	O  *string `json:"O,omitempty"`
	OU *string `json:"OU,omitempty"`
	ST *string `json:"ST,omitempty"`
}

// GetC returns the C field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetC() string {
	if o == nil || o.C == nil {
		var ret string
		return ret
	}
	return *o.C
}

// GetCOk returns a tuple with the C field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetCOk() (string, bool) {
	if o == nil || o.C == nil {
		var ret string
		return ret, false
	}
	return *o.C, true
}

// HasC returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasC() bool {
	if o != nil && o.C != nil {
		return true
	}

	return false
}

// SetC gets a reference to the given string and assigns it to the C field.
func (o *SyntheticsSslCertificateIssuer) SetC(v string) {
	o.C = &v
}

// GetCN returns the CN field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetCN() string {
	if o == nil || o.CN == nil {
		var ret string
		return ret
	}
	return *o.CN
}

// GetCNOk returns a tuple with the CN field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetCNOk() (string, bool) {
	if o == nil || o.CN == nil {
		var ret string
		return ret, false
	}
	return *o.CN, true
}

// HasCN returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasCN() bool {
	if o != nil && o.CN != nil {
		return true
	}

	return false
}

// SetCN gets a reference to the given string and assigns it to the CN field.
func (o *SyntheticsSslCertificateIssuer) SetCN(v string) {
	o.CN = &v
}

// GetL returns the L field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetL() string {
	if o == nil || o.L == nil {
		var ret string
		return ret
	}
	return *o.L
}

// GetLOk returns a tuple with the L field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetLOk() (string, bool) {
	if o == nil || o.L == nil {
		var ret string
		return ret, false
	}
	return *o.L, true
}

// HasL returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasL() bool {
	if o != nil && o.L != nil {
		return true
	}

	return false
}

// SetL gets a reference to the given string and assigns it to the L field.
func (o *SyntheticsSslCertificateIssuer) SetL(v string) {
	o.L = &v
}

// GetO returns the O field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetO() string {
	if o == nil || o.O == nil {
		var ret string
		return ret
	}
	return *o.O
}

// GetOOk returns a tuple with the O field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetOOk() (string, bool) {
	if o == nil || o.O == nil {
		var ret string
		return ret, false
	}
	return *o.O, true
}

// HasO returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasO() bool {
	if o != nil && o.O != nil {
		return true
	}

	return false
}

// SetO gets a reference to the given string and assigns it to the O field.
func (o *SyntheticsSslCertificateIssuer) SetO(v string) {
	o.O = &v
}

// GetOU returns the OU field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetOU() string {
	if o == nil || o.OU == nil {
		var ret string
		return ret
	}
	return *o.OU
}

// GetOUOk returns a tuple with the OU field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetOUOk() (string, bool) {
	if o == nil || o.OU == nil {
		var ret string
		return ret, false
	}
	return *o.OU, true
}

// HasOU returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasOU() bool {
	if o != nil && o.OU != nil {
		return true
	}

	return false
}

// SetOU gets a reference to the given string and assigns it to the OU field.
func (o *SyntheticsSslCertificateIssuer) SetOU(v string) {
	o.OU = &v
}

// GetST returns the ST field value if set, zero value otherwise.
func (o *SyntheticsSslCertificateIssuer) GetST() string {
	if o == nil || o.ST == nil {
		var ret string
		return ret
	}
	return *o.ST
}

// GetSTOk returns a tuple with the ST field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticsSslCertificateIssuer) GetSTOk() (string, bool) {
	if o == nil || o.ST == nil {
		var ret string
		return ret, false
	}
	return *o.ST, true
}

// HasST returns a boolean if a field has been set.
func (o *SyntheticsSslCertificateIssuer) HasST() bool {
	if o != nil && o.ST != nil {
		return true
	}

	return false
}

// SetST gets a reference to the given string and assigns it to the ST field.
func (o *SyntheticsSslCertificateIssuer) SetST(v string) {
	o.ST = &v
}

type NullableSyntheticsSslCertificateIssuer struct {
	Value        SyntheticsSslCertificateIssuer
	ExplicitNull bool
}

func (v NullableSyntheticsSslCertificateIssuer) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSyntheticsSslCertificateIssuer) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
