/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SecurityMonitoringRuntimeAgentRule The Agent rule.
type SecurityMonitoringRuntimeAgentRule struct {
	// The Agent rule ID. Must be unique within the rule.
	AgentRuleId *string `json:"agentRuleId,omitempty"`
	// A Runtime Security expression determines what activity should be collected by the Datadog Agent. These logical expressions can use predefined operators and attributes. Tags cannot be used in Runtime Security expressions. Instead, allow or deny based on tags under the advanced option.
	Expression *string `json:"expression,omitempty"`
	// UnparsedObject contains the raw value of the object if there was an error when deserializing into the struct
	UnparsedObject map[string]interface{} `json:-`
}

// NewSecurityMonitoringRuntimeAgentRule instantiates a new SecurityMonitoringRuntimeAgentRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityMonitoringRuntimeAgentRule() *SecurityMonitoringRuntimeAgentRule {
	this := SecurityMonitoringRuntimeAgentRule{}
	return &this
}

// NewSecurityMonitoringRuntimeAgentRuleWithDefaults instantiates a new SecurityMonitoringRuntimeAgentRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityMonitoringRuntimeAgentRuleWithDefaults() *SecurityMonitoringRuntimeAgentRule {
	this := SecurityMonitoringRuntimeAgentRule{}
	return &this
}

// GetAgentRuleId returns the AgentRuleId field value if set, zero value otherwise.
func (o *SecurityMonitoringRuntimeAgentRule) GetAgentRuleId() string {
	if o == nil || o.AgentRuleId == nil {
		var ret string
		return ret
	}
	return *o.AgentRuleId
}

// GetAgentRuleIdOk returns a tuple with the AgentRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuntimeAgentRule) GetAgentRuleIdOk() (*string, bool) {
	if o == nil || o.AgentRuleId == nil {
		return nil, false
	}
	return o.AgentRuleId, true
}

// HasAgentRuleId returns a boolean if a field has been set.
func (o *SecurityMonitoringRuntimeAgentRule) HasAgentRuleId() bool {
	if o != nil && o.AgentRuleId != nil {
		return true
	}

	return false
}

// SetAgentRuleId gets a reference to the given string and assigns it to the AgentRuleId field.
func (o *SecurityMonitoringRuntimeAgentRule) SetAgentRuleId(v string) {
	o.AgentRuleId = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise.
func (o *SecurityMonitoringRuntimeAgentRule) GetExpression() string {
	if o == nil || o.Expression == nil {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuntimeAgentRule) GetExpressionOk() (*string, bool) {
	if o == nil || o.Expression == nil {
		return nil, false
	}
	return o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *SecurityMonitoringRuntimeAgentRule) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *SecurityMonitoringRuntimeAgentRule) SetExpression(v string) {
	o.Expression = &v
}

func (o SecurityMonitoringRuntimeAgentRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnparsedObject != nil {
		return json.Marshal(o.UnparsedObject)
	}
	if o.AgentRuleId != nil {
		toSerialize["agentRuleId"] = o.AgentRuleId
	}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	return json.Marshal(toSerialize)
}

func (o *SecurityMonitoringRuntimeAgentRule) UnmarshalJSON(bytes []byte) (err error) {
	raw := map[string]interface{}{}
	all := struct {
		AgentRuleId *string `json:"agentRuleId,omitempty"`
		Expression  *string `json:"expression,omitempty"`
	}{}
	err = json.Unmarshal(bytes, &all)
	if err != nil {
		err = json.Unmarshal(bytes, &raw)
		if err != nil {
			return err
		}
		o.UnparsedObject = raw
		return nil
	}
	o.AgentRuleId = all.AgentRuleId
	o.Expression = all.Expression
	return nil
}

type NullableSecurityMonitoringRuntimeAgentRule struct {
	value *SecurityMonitoringRuntimeAgentRule
	isSet bool
}

func (v NullableSecurityMonitoringRuntimeAgentRule) Get() *SecurityMonitoringRuntimeAgentRule {
	return v.value
}

func (v *NullableSecurityMonitoringRuntimeAgentRule) Set(val *SecurityMonitoringRuntimeAgentRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityMonitoringRuntimeAgentRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityMonitoringRuntimeAgentRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityMonitoringRuntimeAgentRule(val *SecurityMonitoringRuntimeAgentRule) *NullableSecurityMonitoringRuntimeAgentRule {
	return &NullableSecurityMonitoringRuntimeAgentRule{value: val, isSet: true}
}

func (v NullableSecurityMonitoringRuntimeAgentRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityMonitoringRuntimeAgentRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
