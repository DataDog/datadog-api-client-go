/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// ApplicationKeyRelationships Resources related to the application key.
type ApplicationKeyRelationships struct {
	OwnedBy *RelationshipToUser `json:"owned_by,omitempty"`
	// UnparsedObject contains the raw value of the object if there was an error when deserializing into the struct
	UnparsedObject map[string]interface{} `json:-`
}

// NewApplicationKeyRelationships instantiates a new ApplicationKeyRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationKeyRelationships() *ApplicationKeyRelationships {
	this := ApplicationKeyRelationships{}
	return &this
}

// NewApplicationKeyRelationshipsWithDefaults instantiates a new ApplicationKeyRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationKeyRelationshipsWithDefaults() *ApplicationKeyRelationships {
	this := ApplicationKeyRelationships{}
	return &this
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *ApplicationKeyRelationships) GetOwnedBy() RelationshipToUser {
	if o == nil || o.OwnedBy == nil {
		var ret RelationshipToUser
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationKeyRelationships) GetOwnedByOk() (*RelationshipToUser, bool) {
	if o == nil || o.OwnedBy == nil {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *ApplicationKeyRelationships) HasOwnedBy() bool {
	if o != nil && o.OwnedBy != nil {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given RelationshipToUser and assigns it to the OwnedBy field.
func (o *ApplicationKeyRelationships) SetOwnedBy(v RelationshipToUser) {
	o.OwnedBy = &v
}

func (o ApplicationKeyRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnparsedObject != nil {
		return json.Marshal(o.UnparsedObject)
	}
	if o.OwnedBy != nil {
		toSerialize["owned_by"] = o.OwnedBy
	}
	return json.Marshal(toSerialize)
}

func (o *ApplicationKeyRelationships) UnmarshalJSON(bytes []byte) (err error) {
	raw := map[string]interface{}{}
	all := struct {
		OwnedBy *RelationshipToUser `json:"owned_by,omitempty"`
	}{}
	err = json.Unmarshal(bytes, &all)
	if err != nil {
		err = json.Unmarshal(bytes, &raw)
		if err != nil {
			return err
		}
		o.UnparsedObject = raw
		return nil
	}
	o.OwnedBy = all.OwnedBy
	return nil
}

type NullableApplicationKeyRelationships struct {
	value *ApplicationKeyRelationships
	isSet bool
}

func (v NullableApplicationKeyRelationships) Get() *ApplicationKeyRelationships {
	return v.value
}

func (v *NullableApplicationKeyRelationships) Set(val *ApplicationKeyRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationKeyRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationKeyRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationKeyRelationships(val *ApplicationKeyRelationships) *NullableApplicationKeyRelationships {
	return &NullableApplicationKeyRelationships{value: val, isSet: true}
}

func (v NullableApplicationKeyRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationKeyRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
