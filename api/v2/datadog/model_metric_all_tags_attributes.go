/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// MetricAllTagsAttributes Object containing the definition of a metric's tags.
type MetricAllTagsAttributes struct {
	// List of indexed tag value pairs.
	Tags *[]string `json:"tags,omitempty"`
}

// NewMetricAllTagsAttributes instantiates a new MetricAllTagsAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricAllTagsAttributes() *MetricAllTagsAttributes {
	this := MetricAllTagsAttributes{}
	return &this
}

// NewMetricAllTagsAttributesWithDefaults instantiates a new MetricAllTagsAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricAllTagsAttributesWithDefaults() *MetricAllTagsAttributes {
	this := MetricAllTagsAttributes{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MetricAllTagsAttributes) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricAllTagsAttributes) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MetricAllTagsAttributes) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *MetricAllTagsAttributes) SetTags(v []string) {
	o.Tags = &v
}

func (o MetricAllTagsAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableMetricAllTagsAttributes struct {
	value *MetricAllTagsAttributes
	isSet bool
}

func (v NullableMetricAllTagsAttributes) Get() *MetricAllTagsAttributes {
	return v.value
}

func (v *NullableMetricAllTagsAttributes) Set(val *MetricAllTagsAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricAllTagsAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricAllTagsAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricAllTagsAttributes(val *MetricAllTagsAttributes) *NullableMetricAllTagsAttributes {
	return &NullableMetricAllTagsAttributes{value: val, isSet: true}
}

func (v NullableMetricAllTagsAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricAllTagsAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
