/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// SecurityMonitoringRuleThirdPartyOptions Options for third-party rules.
type SecurityMonitoringRuleThirdPartyOptions struct {
	// Notification targets for the root query.
	DefaultNotifications *[]string                       `json:"defaultNotifications,omitempty"`
	DefaultStatus        *SecurityMonitoringRuleSeverity `json:"defaultStatus,omitempty"`
	// (Optional): the name of an attribute to override the first seen value of the third party signal.
	FirstSeenOverride *string `json:"firstSeenOverride,omitempty"`
	// (Optional): the name of an attribute to override the last seen value of the third party signal.
	LastSeenOverride *string `json:"lastSeenOverride,omitempty"`
	// Root query of the rule.
	RootQuery *string `json:"rootQuery,omitempty"`
	// Optional mapping of the third-party signal ID.
	SignalId *string `json:"signalId,omitempty"`
	// UnparsedObject contains the raw value of the object if there was an error when deserializing into the struct
	UnparsedObject map[string]interface{} `json:-`
}

// NewSecurityMonitoringRuleThirdPartyOptions instantiates a new SecurityMonitoringRuleThirdPartyOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityMonitoringRuleThirdPartyOptions() *SecurityMonitoringRuleThirdPartyOptions {
	this := SecurityMonitoringRuleThirdPartyOptions{}
	return &this
}

// NewSecurityMonitoringRuleThirdPartyOptionsWithDefaults instantiates a new SecurityMonitoringRuleThirdPartyOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityMonitoringRuleThirdPartyOptionsWithDefaults() *SecurityMonitoringRuleThirdPartyOptions {
	this := SecurityMonitoringRuleThirdPartyOptions{}
	return &this
}

// GetDefaultNotifications returns the DefaultNotifications field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetDefaultNotifications() []string {
	if o == nil || o.DefaultNotifications == nil {
		var ret []string
		return ret
	}
	return *o.DefaultNotifications
}

// GetDefaultNotificationsOk returns a tuple with the DefaultNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetDefaultNotificationsOk() (*[]string, bool) {
	if o == nil || o.DefaultNotifications == nil {
		return nil, false
	}
	return o.DefaultNotifications, true
}

// HasDefaultNotifications returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasDefaultNotifications() bool {
	if o != nil && o.DefaultNotifications != nil {
		return true
	}

	return false
}

// SetDefaultNotifications gets a reference to the given []string and assigns it to the DefaultNotifications field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetDefaultNotifications(v []string) {
	o.DefaultNotifications = &v
}

// GetDefaultStatus returns the DefaultStatus field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetDefaultStatus() SecurityMonitoringRuleSeverity {
	if o == nil || o.DefaultStatus == nil {
		var ret SecurityMonitoringRuleSeverity
		return ret
	}
	return *o.DefaultStatus
}

// GetDefaultStatusOk returns a tuple with the DefaultStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetDefaultStatusOk() (*SecurityMonitoringRuleSeverity, bool) {
	if o == nil || o.DefaultStatus == nil {
		return nil, false
	}
	return o.DefaultStatus, true
}

// HasDefaultStatus returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasDefaultStatus() bool {
	if o != nil && o.DefaultStatus != nil {
		return true
	}

	return false
}

// SetDefaultStatus gets a reference to the given SecurityMonitoringRuleSeverity and assigns it to the DefaultStatus field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetDefaultStatus(v SecurityMonitoringRuleSeverity) {
	o.DefaultStatus = &v
}

// GetFirstSeenOverride returns the FirstSeenOverride field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetFirstSeenOverride() string {
	if o == nil || o.FirstSeenOverride == nil {
		var ret string
		return ret
	}
	return *o.FirstSeenOverride
}

// GetFirstSeenOverrideOk returns a tuple with the FirstSeenOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetFirstSeenOverrideOk() (*string, bool) {
	if o == nil || o.FirstSeenOverride == nil {
		return nil, false
	}
	return o.FirstSeenOverride, true
}

// HasFirstSeenOverride returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasFirstSeenOverride() bool {
	if o != nil && o.FirstSeenOverride != nil {
		return true
	}

	return false
}

// SetFirstSeenOverride gets a reference to the given string and assigns it to the FirstSeenOverride field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetFirstSeenOverride(v string) {
	o.FirstSeenOverride = &v
}

// GetLastSeenOverride returns the LastSeenOverride field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetLastSeenOverride() string {
	if o == nil || o.LastSeenOverride == nil {
		var ret string
		return ret
	}
	return *o.LastSeenOverride
}

// GetLastSeenOverrideOk returns a tuple with the LastSeenOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetLastSeenOverrideOk() (*string, bool) {
	if o == nil || o.LastSeenOverride == nil {
		return nil, false
	}
	return o.LastSeenOverride, true
}

// HasLastSeenOverride returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasLastSeenOverride() bool {
	if o != nil && o.LastSeenOverride != nil {
		return true
	}

	return false
}

// SetLastSeenOverride gets a reference to the given string and assigns it to the LastSeenOverride field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetLastSeenOverride(v string) {
	o.LastSeenOverride = &v
}

// GetRootQuery returns the RootQuery field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetRootQuery() string {
	if o == nil || o.RootQuery == nil {
		var ret string
		return ret
	}
	return *o.RootQuery
}

// GetRootQueryOk returns a tuple with the RootQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetRootQueryOk() (*string, bool) {
	if o == nil || o.RootQuery == nil {
		return nil, false
	}
	return o.RootQuery, true
}

// HasRootQuery returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasRootQuery() bool {
	if o != nil && o.RootQuery != nil {
		return true
	}

	return false
}

// SetRootQuery gets a reference to the given string and assigns it to the RootQuery field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetRootQuery(v string) {
	o.RootQuery = &v
}

// GetSignalId returns the SignalId field value if set, zero value otherwise.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetSignalId() string {
	if o == nil || o.SignalId == nil {
		var ret string
		return ret
	}
	return *o.SignalId
}

// GetSignalIdOk returns a tuple with the SignalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) GetSignalIdOk() (*string, bool) {
	if o == nil || o.SignalId == nil {
		return nil, false
	}
	return o.SignalId, true
}

// HasSignalId returns a boolean if a field has been set.
func (o *SecurityMonitoringRuleThirdPartyOptions) HasSignalId() bool {
	if o != nil && o.SignalId != nil {
		return true
	}

	return false
}

// SetSignalId gets a reference to the given string and assigns it to the SignalId field.
func (o *SecurityMonitoringRuleThirdPartyOptions) SetSignalId(v string) {
	o.SignalId = &v
}

func (o SecurityMonitoringRuleThirdPartyOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnparsedObject != nil {
		return json.Marshal(o.UnparsedObject)
	}
	if o.DefaultNotifications != nil {
		toSerialize["defaultNotifications"] = o.DefaultNotifications
	}
	if o.DefaultStatus != nil {
		toSerialize["defaultStatus"] = o.DefaultStatus
	}
	if o.FirstSeenOverride != nil {
		toSerialize["firstSeenOverride"] = o.FirstSeenOverride
	}
	if o.LastSeenOverride != nil {
		toSerialize["lastSeenOverride"] = o.LastSeenOverride
	}
	if o.RootQuery != nil {
		toSerialize["rootQuery"] = o.RootQuery
	}
	if o.SignalId != nil {
		toSerialize["signalId"] = o.SignalId
	}
	return json.Marshal(toSerialize)
}

func (o *SecurityMonitoringRuleThirdPartyOptions) UnmarshalJSON(bytes []byte) (err error) {
	raw := map[string]interface{}{}
	all := struct {
		DefaultNotifications *[]string                       `json:"defaultNotifications,omitempty"`
		DefaultStatus        *SecurityMonitoringRuleSeverity `json:"defaultStatus,omitempty"`
		FirstSeenOverride    *string                         `json:"firstSeenOverride,omitempty"`
		LastSeenOverride     *string                         `json:"lastSeenOverride,omitempty"`
		RootQuery            *string                         `json:"rootQuery,omitempty"`
		SignalId             *string                         `json:"signalId,omitempty"`
	}{}
	err = json.Unmarshal(bytes, &all)
	if err != nil {
		err = json.Unmarshal(bytes, &raw)
		if err != nil {
			return err
		}
		o.UnparsedObject = raw
		return nil
	}
	if v := all.DefaultStatus; v != nil && !v.IsValid() {
		err = json.Unmarshal(bytes, &raw)
		if err != nil {
			return err
		}
		o.UnparsedObject = raw
		return nil
	}
	o.DefaultNotifications = all.DefaultNotifications
	o.DefaultStatus = all.DefaultStatus
	o.FirstSeenOverride = all.FirstSeenOverride
	o.LastSeenOverride = all.LastSeenOverride
	o.RootQuery = all.RootQuery
	o.SignalId = all.SignalId
	return nil
}

type NullableSecurityMonitoringRuleThirdPartyOptions struct {
	value *SecurityMonitoringRuleThirdPartyOptions
	isSet bool
}

func (v NullableSecurityMonitoringRuleThirdPartyOptions) Get() *SecurityMonitoringRuleThirdPartyOptions {
	return v.value
}

func (v *NullableSecurityMonitoringRuleThirdPartyOptions) Set(val *SecurityMonitoringRuleThirdPartyOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityMonitoringRuleThirdPartyOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityMonitoringRuleThirdPartyOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityMonitoringRuleThirdPartyOptions(val *SecurityMonitoringRuleThirdPartyOptions) *NullableSecurityMonitoringRuleThirdPartyOptions {
	return &NullableSecurityMonitoringRuleThirdPartyOptions{value: val, isSet: true}
}

func (v NullableSecurityMonitoringRuleThirdPartyOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityMonitoringRuleThirdPartyOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
